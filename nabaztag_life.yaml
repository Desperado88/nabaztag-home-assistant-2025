# ==========================================
# AUTOMATISATION NABAZTAG VIVANT - VERSION CORRIGÉE
# Active de 8h à 17h avec actions aléatoires
# ==========================================

sensor:
  - platform: rest
    name: Bitcoin Exchange Rate
    resource: https://api.coinbase.com/v2/exchange-rates?currency=BTC
    value_template: "{{ value_json.data.rates.EUR | float }}"
    unit_of_measurement: "EUR"
    scan_interval: 300
    icon: mdi:currency-btc

input_number:
  bitcoin_previous_exchange_rate:
    name: Previous Bitcoin Exchange Rate
    initial: 0
    min: 0
    max: 500000
    step: 0.01
    mode: box
    icon: mdi:currency-btc

  bitcoin_value_difference:
    name: Bitcoin Value Difference
    initial: 0
    min: -100000
    max: 500000
    step: 0.01
    mode: box
    icon: mdi:currency-btc

input_select :
  nabaztag_stocks:
    name: Stocks Display
    options:
      - "Off"
      - "Bitcoin"
      - "All"
    initial: "Off"
    icon: mdi:chart-line

# Automatisation principale - Démarrage à 8h
automation:
  - id: nabaztag_start_day
    alias: "Nabaztag - Actions aléatoires ON"
    trigger:
      - trigger: time
        at: "07:05:00"  # 5 min après le réveil existant
    condition:
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"  # Seulement si déjà réveillé
    action:
      - action: automation.turn_on
        target:
          entity_id: automation.nabaztag_random_actions

  # Automatisation - Arrêt à 21h45 (avant le coucher existant)
  - id: nabaztag_end_day
    alias: "Nabaztag - Actions aléatoires OFF"
    trigger:
      - trigger: time
        at: "21:45:00"
    condition:
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
    action:
      - action: automation.turn_off
        target:
          entity_id: automation.nabaztag_random_actions

  # Automatisation - Actions aléatoires (toutes les 15 minutes)
  - id: nabaztag_random_actions
    alias: "Nabaztag - Actions aléatoires"
    trigger:
      - trigger: time_pattern
        minutes: "/15"
    condition:
      - condition: time
        after: "07:00:00"
        before: "21:45:00"
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
      - condition: template
        value_template: "{{ (range(1,4) | random) == 1 }}" # 33% de chance
    action:
      - action: script.nabaztag_random_action

  # Actions aux heures pleines
  - id: nabaztag_hourly_action
    alias: "Nabaztag - Action horaire"
    trigger:
      - trigger: time_pattern
        minutes: 0
    condition:
      - condition: time
        after: "07:00:00"
        before: "21:45:00"
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
    action:
      - action: script.nabaztag_announce_time
      - delay: "00:00:05"
      - action: script.nabaztag_random_action

  # Pause déjeuner (12h)
  - id: nabaztag_lunch_break
    alias: "Nabaztag - Pause déjeuner"
    trigger:
      - trigger: time
        at: "12:00:00"
    action:
      - action: rest_command.nabaztag_say
        data:
          message: "ses lheure du daisjeuner ! Bon appaittit a tous !"
      - action: rest_command.nabaztag_nose
        data:
          state: 1
          nose_color: "red"
      - delay: "00:00:03"
      - action: rest_command.nabaztag_nose
        data:
          state: 1
          nose_color: "00FF00"  # Vert en hex

  # Retour de pause déjeuner (13h)
  - id: nabaztag_back_from_lunch
    alias: "Nabaztag - Retour déjeuner"
    trigger:
      - trigger: time
        at: "13:00:00"
    action:
      - action: rest_command.nabaztag_say
        data:
          message: "Jespaire que vous avez bien manger ! On reprend !"
      - action: script.nabaztag_stretch

  # Cours du Bitcoin (mise à jour toutes les heures pendant la journée)
  - alias: "Nabaztag Bitcoin Update Auto"
    id: nabaztag_bitcoin_update_auto
    trigger:
      - trigger: time_pattern
        minutes: 0
    condition:
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
      - condition: not
        conditions:
          - condition: state
            entity_id: input_select.nabaztag_stocks
            state: "Off"
      - condition: time
        after: "09:00:00"
        before: "18:00:00"
      - condition: template
        value_template: >
          {% set current = states('sensor.bitcoin_exchange_rate') | float %}
          {% set previous = states('input_number.bitcoin_previous_exchange_rate') | float %}
          {{ (current - previous) | abs > (previous * 0.05) }}
    action:
      - action: input_number.set_value
        target:
          entity_id: input_number.bitcoin_previous_exchange_rate
        data:
          value: "{{ states('sensor.bitcoin_exchange_rate') }}"
      - action: rest_command.nabaztag_say
        data:
          message: >
            {% set current = states('sensor.bitcoin_exchange_rate') | float %}
            {% set previous = states('input_number.bitcoin_previous_exchange_rate') | float %}
            {% set diff = current - previous %}
            {% if diff > 0 %}
              Excellente nouvelle ! Le Bitcoin a augmenter et vaut maintenant {{ current | round(0) }} euros.
            {% else %}
              Attention, le Bitcoin a baisser et vaut maintenant {{ current | round(0) }} euros.
            {% endif %}

# ==========================================
# SCRIPTS PRINCIPAUX
# ==========================================

script:
  # Réveil du matin
  nabaztag_wake_up:
    alias: "Nabaztag - Réveil"
    sequence:
      - action: rest_command.nabaztag_wakeup
      - delay: "00:00:02"
      - action: rest_command.nabaztag_taichi
        data:
          speed: 500
      - delay: "00:00:03"
      - action: rest_command.nabaztag_left_ear
        data:
          position: 8
      - action: rest_command.nabaztag_right_ear
        data:
          position: 8
      - delay: "00:00:01"
      - action: rest_command.nabaztag_say
        data:
          message: "Bonjour ! Je me raiveille pour une nouvelle journer !"
      - action: rest_command.nabaztag_nose
        data:
          state: 1
          nose_color: "00FF00"  # Vert en hex

  # Endormissement du soir
  nabaztag_sleep_sequence:
    alias: "Nabaztag - Dodo"
    sequence:
      - action: rest_command.nabaztag_say
        data:
          message: "Bonne soirer ! Je vais me reposer maintenant."
      - delay: "00:00:03"
      - action: rest_command.nabaztag_taichi
        data:
          speed: 100
      - delay: "00:00:02"
      - action: rest_command.nabaztag_left_ear
        data:
          position: 0
      - action: rest_command.nabaztag_right_ear
        data:
          position: 0
      - action: rest_command.nabaztag_nose
        data:
          state: 0
          nose_color: "000000"  # Off en hex
      - delay: "00:00:02"
      - action: rest_command.nabaztag_sleep

  # Action aléatoire
  nabaztag_random_action:
    alias: "Nabaztag - Action aléatoire"
    sequence:
      - variables:
          action_type: "{{ range(1, 9) | random }}"
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ action_type == 1 }}"
            sequence:
              - action: script.nabaztag_tell_joke
          - conditions:
              - condition: template
                value_template: "{{ action_type == 2 }}"
            sequence:
              - action: script.nabaztag_announce_weather
          - conditions:
              - condition: template
                value_template: "{{ action_type == 3 }}"
            sequence:
              - action: script.nabaztag_announce_time
          - conditions:
              - condition: template
                value_template: "{{ action_type == 4 }}"
            sequence:
              - action: script.nabaztag_stretch
          - conditions:
              - condition: template
                value_template: "{{ action_type == 5 }}"
            sequence:
              - action: script.nabaztag_yawn
          - conditions:
              - condition: template
                value_template: "{{ action_type == 6 }}"
            sequence:
              - action: script.nabaztag_ear_dance
          - conditions:
              - condition: template
                value_template: "{{ action_type == 7 }}"
            sequence:
              - action: script.nabaztag_random_sound
          - conditions:
              - condition: template
                value_template: "{{ action_type == 8 }}"
            sequence:
              - action: script.nabaztag_surprise_action
          - conditions:
              - condition: template
                value_template: "{{ action_type == 9 }}"
            sequence:
              - action: script.nabaztag_daily_info


  # Dire une blague
  nabaztag_tell_joke:
    alias: "Nabaztag - Raconter une blague"
    sequence:
      - action: rest_command.nabaztag_nose
        data:
          state: 1
          nose_color: "FF8000"  # Orange en hex
      - action: rest_command.nabaztag_communication
      - delay: "00:00:01"
      - action: rest_command.nabaztag_say
        data_template:
          message: >
            {% set jokes = [
              "Pourquoi les plongeurs plongent-ils toujours en arriaire et jamais en avant ? Parce que sinon ils tombent dans le bateau !",
              "Que dit un escargot quand il croise une limace ? Regarde un nudiste !",
              "Quest-ce qui est jaune et qui attend ? Jonathan !",
              "Pourquoi les poissons naiment pas jouer au tennis ? Parce quils ont peur du filet !",
              "Comment appelle-t-on un chat tomber dans un pot de peinture le jour de Noel ? Un chat-mallow !",
              "Que dit un informaticien quand il se noie ? F1 F1 !",
              "Comment fait-on pour allumer un barbecue breton ? On utilise des breizh !",
              "Quest-ce qui est transparent et qui sent la carotte ? Un pet de lapin !",
              "Pourquoi Mickey Mouse ? Parce que Mario Bros !"
            ] %}
            {{ jokes | random }}
      - delay: "00:00:02"
      - action: rest_command.nabaztag_nose
        data:
          state: 1
          nose_color: "00FF00"  # Vert en hex

  # Annoncer la météo (utilise weather.forecast_maison)
  nabaztag_announce_weather:
    alias: "Nabaztag - Annoncer la météo"
    sequence:
      - variables:
          meteo: "{{ states('weather.forecast_maison') }}"
          temperature: "{{ state_attr('weather.forecast_maison', 'temperature') }}"
      - action: rest_command.nabaztag_set_weather
        data:
          weather: >
            {% if meteo == "sunny" %}
              sun
            {% elif meteo in ["partlycloudy", "cloudy"] %}
              clouds
            {% elif meteo in ["rainy", "pouring"] %}
              rain
            {% elif meteo in ["snowy", "snowy-rainy"] %}
              snow
            {% else %}
              clouds
            {% endif %}
          weather_icon: >
            {% if meteo == "sunny" %}
              sun
            {% elif meteo in ["partlycloudy", "cloudy"] %}
              clouds
            {% elif meteo in ["rainy", "pouring"] %}
              rain
            {% elif meteo in ["snowy", "snowy-rainy"] %}
              snow
            {% else %}
              clouds
            {% endif %}
      - delay: "00:00:02"
      - action: rest_command.nabaztag_say
        data_template:
          message: >
            {% if meteo == "sunny" %}
              Il fait beau aujourd'hui avec {{ temperature }} degrer !
            {% elif meteo in ["partlycloudy", "cloudy"] %}
              Le temps est nuageux avec {{ temperature }} degrer.
            {% elif meteo in ["rainy", "pouring"] %}
              Il pleut, prevoyez un parapluie ! Temperature : {{ temperature }} daigrai.
            {% elif meteo in ["snowy", "snowy-rainy"] %}
              Il neige dehors ! Temperature : {{ temperature }} daigrai.
            {% else %}
              La meteo actuelle est {{ meteo }} avec {{ temperature }} daigrai.
            {% endif %}


  # Annoncer l'heure
  nabaztag_announce_time:
    alias: "Nabaztag - Annoncer l'heure"
    sequence:
      - action: rest_command.nabaztag_ack
      - delay: "00:00:01"
      - action: rest_command.nabaztag_say
        data_template:
          message: "Il est {{ now().strftime('%H heures %M') }}"

  # Étirement (Taichi)
  nabaztag_stretch:
    alias: "Nabaztag - S'étirer"
    sequence:
      - action: rest_command.nabaztag_say
        data_template:
          message: "{{ ['Allez un petit etirement !', 'Il est temps de se daigourdir !', 'Un peu dexercice !'] | random }}"
      - delay: "00:00:02"
      - action: rest_command.nabaztag_taichi
        data:
          speed: 255
      - delay: "00:00:05"
      - action: rest_command.nabaztag_taichi
        data:
          speed: 1000

  # Bâillement
  nabaztag_yawn:
    alias: "Nabaztag - Bâiller"
    sequence:
      - action: rest_command.nabaztag_say
        data_template:
          message: "{{ ['Haaaaa petit baillement !', 'Je suis un peu fatiguer', 'Hooooo excusez-moi'] | random }}"
      - action: rest_command.nabaztag_left_ear
        data:
          position: 0
      - action: rest_command.nabaztag_right_ear
        data:
          position: 0
      - delay: "00:00:02"
      - action: rest_command.nabaztag_left_ear
        data:
          position: 16
      - action: rest_command.nabaztag_right_ear
        data:
          position: 16
      - delay: "00:00:01"
      - action: rest_command.nabaztag_left_ear
        data:
          position: 8
      - action: rest_command.nabaztag_right_ear
        data:
          position: 8

  # Danse des oreilles (compatible avec script existant)
  nabaztag_ear_dance:
    alias: "Nabaztag - Danse des oreilles"
    sequence:
      - action: rest_command.nabaztag_communication
      - repeat:
          count: 3
          sequence:
            - action: rest_command.nabaztag_left_ear
              data:
                position: "{{ range(0, 11) | random }}"
            - action: rest_command.nabaztag_right_ear
              data:
                position: "{{ range(0, 11) | random }}"
            - delay: "00:00:00.5"
            - action: rest_command.nabaztag_nose
              data:
                state: 1
                nose_color: "{{ ['FF0000', '00FF00', '0000FF', 'FFFF00', 'FF00FF', 'FF8000'] | random }}"
            - delay: "00:00:00.5"
      - action: rest_command.nabaztag_left_ear
        data:
          position: 8
      - action: rest_command.nabaztag_right_ear
        data:
          position: 8

  # Son aléatoire
  nabaztag_random_sound:
    alias: "Nabaztag - Son aléatoire"
    sequence:
      - variables:
          sound_choice: "{{ range(1, 4) | random }}"
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ sound_choice == 1 }}"
            sequence:
              - action: rest_command.nabaztag_communication
          - conditions:
              - condition: template
                value_template: "{{ sound_choice == 2 }}"
            sequence:
              - action: rest_command.nabaztag_ack
          - conditions:
              - condition: template
                value_template: "{{ sound_choice == 3 }}"
            sequence:
              - action: rest_command.nabaztag_ministop
      - action: rest_command.nabaztag_nose
        data:
          state: 1
          nose_color: "{{ ['FF0000', 'FF8000', '00FF00'] | random }}"
      - delay: "00:00:02"
      - action: rest_command.nabaztag_nose
        data:
          state: 1
          nose_color: "00FF00"  # Vert en hex

  # Script de danse (utilise le script existant)
  nabaztag_dance:
    alias: "Nabaztag - Danse"
    sequence:
      - action: rest_command.nabaztag_taichi
        data:
          speed: 1000
      - delay: "00:00:02"
      - repeat:
          count: 3
          sequence:
            - action: rest_command.nabaztag_left_ear
              data:
                position: "{{ range(0, 11) | random }}"
            - action: rest_command.nabaztag_right_ear
              data:
                position: "{{ range(0, 11) | random }}"
            - delay: "00:00:00.5"
            - action: rest_command.nabaztag_nose
              data:
                state: 1
                nose_color: "{{ ['FF0000', '00FF00', '0000FF', 'FFFF00', 'FF00FF', 'FF8000'] | random }}"
            - delay: "00:00:00.5"
      - action: rest_command.nabaztag_nose
        data:
          state: 1
          nose_color: "8000FF"  # Purple en hex

  # Action surprise
  nabaztag_surprise_action:
    alias: "Nabaztag - Surprise"
    sequence:
      - action: script.turn_on
        target:
          entity_id: script.nabaztag_dance
      - action: rest_command.nabaztag_surprise

  nabaztag_daily_info:
    alias: Daily Information Summary
    sequence:
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
      - action: rest_command.nabaztag_say
        data:
          message: >
            Bonjour ! Voici les informations du jour.
            La meteo est {{ states('weather.home') }}.
            Le Bitcoin vaut {{ states('sensor.bitcoin_exchange_rate') }} euros.
            Bonne journee !