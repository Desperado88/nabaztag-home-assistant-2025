###############################################################################
#                                                                             #
#                             NABAZTAG PACKAGE                                #
#                         Compatible Home Assistant 2025                      #
#                                                                             #
###############################################################################
# Change your Nabaztag ip, tts language and your favourite radio stations url # 
# in the input_text section.                                                  #
#                                                                             #
# Change when you want to receive automatically weather, stocks, traffic and  #
# pollution informations in the NABAZTAG TIME MANAGEMENT section.             #
#                                                                             #
# Here is the tab for your HA main page:                                      #
#                                                                             #
#  Tab_Nabaztag:                                                              #
#    name: Nabaztag                                                           #
#    view: yes                                                                #
#    icon: mdi:carrot                                                         #
#    entities:                                                                #
#      - group.nabaztag_utils                                                 #
#      - group.nabaztag_body                                                  #
#      - group.nabaztag_lights                                                #
#      - group.nabaztag_locale_setup                                          #
#                                                                             #
#------------------------------------------------------------------------------
input_text:
#------------------------------------------------------------------------------
  nabaztag_ip_address:
    name: Nabaztag Ip Address
    initial: http://192.168.99.15/ # Indiquer ici l'ip du nabaztag
  nabaztag_tts_language:
    name: Nabaztag Tts Language
    initial: fr # Changer la langue si besoin
  nabaztag_radio_1_ip_address:
    name: Nabaztag Radio 1 Ip Address
    initial: http://37.247.50.30/MC2.mp3
  nabaztag_radio_2_ip_address:
    name: Nabaztag Radio 2 Ip Address
    initial: http://icecast.vrtcdn.be/mnm_hits-high.mp3
  nabaztag_radio_3_ip_address:
    name: Nabaztag Radio 3 Ip Address
    initial: http://shoutcast.rtl.it:3010/stream/1/
  nabaztag_radio_4_ip_address:
    name: Nabaztag Radio 4 Ip Address
    initial: http://shoutcast.rtl.it:3010/stream/1/
  nabaztag_radio_5_ip_address:
    name: Nabaztag Radio 5 Ip Address
    initial: http://shoutcast.rtl.it:3010/stream/1/
  nabaztag_voice:
    name: TTS
    initial: Say Something...
    min: 1
    max: 255 # valeur original 500
    mode: text

#------------------------------------------------------------------------------
sensor:
#------------------------------------------------------------------------------
# Weather Sensor - Remplacé par l'intégration météo native
# Utiliser l'intégration Open Weather Map ou météo-france via l'interface
# {{ states('weather.home') }} >>> État météo
# Configurer votre intégration météo préférée dans Configuration > Intégrations

# Stocks Sensor - Bitcoin remplacé par REST sensor
  - trigger: rest
    name: Bitcoin Exchange Rate
    resource: https://api.coinbase.com/v2/exchange-rates?currency=BTC
    value_template: "{{ value_json.data.rates.EUR | float }}"
    unit_of_measurement: "EUR"
    scan_interval: 300
    icon: mdi:currency-btc

# Traffic Sensor - Google Maps Travel Time mis à jour
  - trigger: google_travel_time
    api_key: !secret google_distance_matrix_api_key
    name: Home To Work
    origin: Verona, Italy
    destination: Modena, Italy
    travel_mode: driving
    unit_system: metric
    scan_interval: 300

# Template sensor pour le statut du trafic
  - trigger: template
    sensors:
      traffic_status:
        friendly_name: "Traffic Status"
        value_template: >-
          {% set duration = states('sensor.home_to_work') | float %}
          {% set normal_time = states('input_number.time_to_work') | float %}
          {% if duration == 0 %}
            unknown
          {% elif duration <= normal_time * 1.1 %}
            good
          {% elif duration <= normal_time * 1.3 %}
            moderate
          {% else %}
            heavy
          {% endif %}
        icon_template: >-
          {% set status = states('sensor.traffic_status') %}
          {% if status == 'good' %}
            mdi:car-speed-limiter
          {% elif status == 'moderate' %}
            mdi:car-brake-alert
          {% else %}
            mdi:car-brake-hold
          {% endif %}

# Pollution Sensor - Remplacé par REST sensor pour OpenWeather Air Pollution API
  - trigger: rest
    name: Air Quality Index
    resource_template: "https://api.openweathermap.org/data/2.5/air_pollution?lat={{ state_attr('zone.home', 'latitude') }}&lon={{ state_attr('zone.home', 'longitude') }}&appid={{ secrets.openweather_api_key }}"
    value_template: "{{ value_json.list[0].main.aqi }}"
    unit_of_measurement: "AQI"
    scan_interval: 1800
    icon: mdi:air-filter

  - trigger: template
    sensors:
      air_quality_status:
        friendly_name: "Air Quality Status"
        value_template: >-
          {% set aqi = states('sensor.air_quality_index') | int %}
          {% if aqi == 1 %}
            Good
          {% elif aqi == 2 %}
            Fair
          {% elif aqi == 3 %}
            Moderate
          {% elif aqi == 4 %}
            Poor
          {% elif aqi == 5 %}
            Very Poor
          {% else %}
            Unknown
          {% endif %}

#------------------------------------------------------------------------------
group:
#------------------------------------------------------------------------------
  nabaztag_body:
    name: Nabaztag Body
    entities:
      - input_boolean.nabaztag_taichi
      - input_select.nabaztag_taichi
      - input_boolean.nabaztag_nose
      - input_select.nabaztag_nose
      - input_number.nabaztag_left_ear
      - input_number.nabaztag_right_ear
      - input_select.nabaztag_body_language

  nabaztag_lights:
    name: Nabaztag Info
    entities:
      - input_select.nabaztag_show_info
      - input_select.nabaztag_weather
      - input_select.nabaztag_stocks
      - input_select.nabaztag_traffic
      - input_select.nabaztag_pollution
      - script.nabaztag_info_off

  nabaztag_utils:
    name: Nabaztag Utils
    entities:
      - input_boolean.nabaztaglife
      - script.nabaztag_surprise
      - script.nabaztag_stop
      - input_select.nabaztag_sounds
      - input_select.nabaztag_radio
      - input_text.nabaztag_voice
      - input_boolean.show_nabaztag_locales

  nabaztag_locale_setup:
    name: Nabaztag Locales
    entities:
      - input_select.nabaztag_language
      - input_select.nabaztag_time_zone
      - script.nabaztag_update
      - script.nabaztag_reboot

#------------------------------------------------------------------------------
input_boolean:
#------------------------------------------------------------------------------
  show_nabaztag_locales:
    name: Locales Setup
    initial: off
    icon: mdi:tune

  nabaztaglife:
    name: Nabaztag Life
    initial: off
    icon: mdi:carrot

  nabaztag_taichi:
    name: Nabaztag Tai Chi
    initial: off
    icon: mdi:meditation

  nabaztag_nose:
    name: Nabaztag Nose
    initial: off
    icon: mdi:nose

  nabaztag_is_awake:
    name: Nabaztag Is Awake
    initial: off
    icon: mdi:sleep-off

#------------------------------------------------------------------------------
input_number:
#------------------------------------------------------------------------------
  nabaztag_left_ear:
    name: Left Ear
    initial: 0
    min: 0
    max: 16
    step: 1
    icon: mdi:ear-hearing

  nabaztag_right_ear:
    name: Right Ear
    initial: 0
    min: 0
    max: 16
    step: 1
    icon: mdi:ear-hearing

  bitcoin_previous_exchange_rate:
    name: Previous Bitcoin Exchange Rate
    initial: 0
    min: 0
    max: 100000
    step: 0.01
    mode: box
    icon: mdi:currency-btc

  bitcoin_value_difference:
    name: Bitcoin Value Difference
    initial: 0
    min: -100000
    max: 100000
    step: 0.01
    mode: box
    icon: mdi:currency-btc

  time_to_work:
    name: Time to work
    initial: 80
    min: 1
    max: 240
    step: 1
    mode: box
    icon: mdi:clock

#------------------------------------------------------------------------------
rest_command:
#------------------------------------------------------------------------------
  nabaztag_update:
    url: "{{ states('input_text.nabaztag_ip_address') }}update"
    method: GET
    timeout: 10

  nabaztag_reboot:
    url: "{{ states('input_text.nabaztag_ip_address') }}reboot"
    method: GET
    timeout: 10
#------------------------------------------------------------------------------
script:
#------------------------------------------------------------------------------
  nabaztag_surprise:
    alias: Nabaztag Surprise
    sequence:
      - action: script.nabaztag_random_ear_movement
      - action: script.nabaztag_random_nose_color
      - action: script.nabaztag_play_sound

  nabaztag_stop:
    alias: Stop Nabaztag
    sequence:
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.nabaztag_taichi
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.nabaztag_nose
      - action: input_select.select_option
        target:
          entity_id: input_select.nabaztag_radio
        data:
          option: "Off"

  nabaztag_info_off:
    alias: Turn Off All Info
    sequence:
      - action: input_select.select_option
        target:
          entity_id: input_select.nabaztag_show_info
        data:
          option: "None"

  nabaztag_update:
    alias: Update Nabaztag
    sequence:
      - action: rest_command.nabaztag_update

  nabaztag_reboot:
    alias: Reboot Nabaztag
    sequence:
      - action: rest_command.nabaztag_reboot

  nabaztag_talk:
    alias: Nabaztag talk
    sequence:
      - alias: Nabaztag Google TTS
        action: tts.google_say
        entity_id: media_player.nabaztag
        data_template: 
          message: >
            '{{ message }}'
          language: "{{ states('input_text.nabaztag_tts_language') }}"
          cache: True
      - alias: Call bash script with curl command
        action: shell_command.nab_talk
      - alias: Clearing Google TTS
        action: tts.clear_cache
#******************************************************************************
  nabaztag_wakeup:
    alias: Wake Up
    sequence:
      - action: shell_command.nab_wakeup
      - action: input_boolean.turn_on
        data:
          entity_id: input_boolean.nabaztaglife
#******************************************************************************
  nabaztag_sleep:
    alias: Sleep
    sequence:
      - action: shell_command.nab_sleep
      - action: input_boolean.turn_off
        data:
          entity_id: input_boolean.nabaztaglife
#******************************************************************************
  nabaztag_taichi:
    alias: Taichi
    sequence:
      - action: shell_command.nab_do_taichi_now
      - action: input_boolean.turn_on
        data:
          entity_id: input_boolean.nabaztag_taichi
#******************************************************************************
  nabaztag_no_taichi:
    alias: No Taichi
    sequence:
      - action: shell_command.nab_taichi_off
      - action: input_boolean.turn_off
        data:
          entity_id: input_boolean.nabaztag_taichi
#******************************************************************************
  nabaztag_nose_on:
    alias: Nose On
    sequence:
      - action: shell_command.nab_nose_1
      - action: input_boolean.turn_on
        data:
          entity_id: input_boolean.nabaztag_nose
#******************************************************************************
  nabaztag_nose_off:
    alias: Nose Off
    sequence:
      - action: shell_command.nab_nose_0
      - action: input_boolean.turn_off
        data:
          entity_id: input_boolean.nabaztag_nose
#------------------------------------------------------------------------------
switch:
#------------------------------------------------------------------------------
  - trigger: template
    switches:
      nabaztaglife:
        friendly_name: "Nabaztag Life"
        value_template: "{{ is_state('input_boolean.nabaztaglife', 'on') }}"
        turn_on:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_wakeup
        turn_off:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_sleep
        icon_template: mdi:carrot

      nabaztag_taichi:
        friendly_name: "Nabaztag Tai Chi"
        value_template: "{{ is_state('input_boolean.nabaztag_taichi', 'on') }}"
        turn_on:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_taichi
        turn_off:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_no_taichi
        icon_template: mdi:meditation

      nabaztag_nose:
        friendly_name: "Nabaztag Nose"
        value_template: "{{ is_state('input_boolean.nabaztag_nose', 'on') }}"
        turn_on:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_nose_on
        turn_off:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_nose_off
        icon_template: mdi:nose
#------------------------------------------------------------------------------
media_player:
#------------------------------------------------------------------------------
  - trigger: universal
    name: nabaztag
#------------------------------------------------------------------------------
input_select:
#------------------------------------------------------------------------------
  nabaztag_taichi:
    name: Nabaztag Tai Chi Mode
    options:
      - "Off"
      - "Slow"
      - "Fast"
    initial: "Off"
    icon: mdi:meditation

  nabaztag_nose:
    name: Nabaztag Nose Color
    options:
      - "Off"
      - "Red"
      - "Green"
      - "Blue"
      - "Yellow"
      - "Purple"
      - "Orange"
    initial: "Off"
    icon: mdi:palette

  nabaztag_body_language:
    name: Nabaztag Body Language
    options:
      - "Normal"
      - "Happy"
      - "Sad"
      - "Excited"
      - "Sleeping"
    initial: "Normal"
    icon: mdi:robot

  nabaztag_show_info:
    name: Show Info Type
    options:
      - "None"
      - "Weather"
      - "Stocks"
      - "Traffic"
      - "Pollution"
      - "All"
    initial: "None"
    icon: mdi:information

  nabaztag_weather:
    name: Weather Display
    options:
      - "Off"
      - "Current"
      - "Forecast"
      - "Both"
    initial: "Off"
    icon: mdi:weather-cloudy

  nabaztag_stocks:
    name: Stocks Display
    options:
      - "Off"
      - "Bitcoin"
      - "All"
    initial: "Off"
    icon: mdi:chart-line

  nabaztag_traffic:
    name: Traffic Display
    options:
      - "Off"
      - "Current"
      - "Alert Only"
    initial: "Off"
    icon: mdi:car

  nabaztag_pollution:
    name: Pollution Display
    options:
      - "Off"
      - "Current"
      - "Alert Only"
    initial: "Off"
    icon: mdi:air-filter

  nabaztag_sounds:
    name: Nabaztag Sounds
    options:
      - "Silent"
      - "Beep"
      - "Chime"
      - "Bell"
    initial: "Silent"
    icon: mdi:volume-high

  nabaztag_radio:
    name: Radio Station
    options:
      - "Off"
      - "Radio 1"
      - "Radio 2"
      - "Radio 3"
      - "Radio 4"
      - "Radio 5"
    initial: "Off"
    icon: mdi:radio

  nabaztag_language:
    name: Language
    options:
      - "fr"
      - "en"
      - "de"
      - "es"
      - "it"
    initial: "fr"
    icon: mdi:translate

  nabaztag_time_zone:
    name: Time Zone
    options:
      - "Europe/Paris"
      - "Europe/London"
      - "Europe/Berlin"
      - "Europe/Rome"
      - "America/New_York"
    initial: "Europe/Paris"
    icon: mdi:clock-outline
#------------------------------------------------------------------------------
shell_command:
#------------------------------------------------------------------------------
  nab_stop: curl {{ states('input_text.nabaztag_ip_address') }}stop
  nab_clear: curl {{ states('input_text.nabaztag_ip_address') }}clear
  nab_sleep: curl {{ states('input_text.nabaztag_ip_address') }}sleep
  nab_wakeup: curl {{ states('input_text.nabaztag_ip_address') }}wakeup
  nab_gettime: curl {{ states('input_text.nabaztag_ip_address') }}gettime
  nab_reboot: curl {{ states('input_text.nabaztag_ip_address') }}reboot
  nab_communication: curl {{ states('input_text.nabaztag_ip_address') }}communication
  nab_ack: curl {{ states('input_text.nabaztag_ip_address') }}ack
  nab_abort: curl {{ states('input_text.nabaztag_ip_address') }}abort
  nab_ministop: curl {{ states('input_text.nabaztag_ip_address') }}ministop
  nab_do_taichi_now: curl {{ states('input_text.nabaztag_ip_address') }}taichi?v=1000
  nab_taichi_off: curl {{ states('input_text.nabaztag_ip_address') }}taichi?v=0
  nab_taichi_medium: curl {{ states('input_text.nabaztag_ip_address') }}taichi?v=80
  nab_talk: bash /config/www/vl/talk.sh
  nab_stock_0: curl {{ states('input_text.nabaztag_ip_address') }}stock?v=0
  nab_stock_1: curl {{ states('input_text.nabaztag_ip_address') }}stock?v=1
  nab_stock_2: curl {{ states('input_text.nabaztag_ip_address') }}stock?v=2
  nab_stock_3: curl {{ states('input_text.nabaztag_ip_address') }}stock?v=3
  nab_stock_4: curl {{ states('input_text.nabaztag_ip_address') }}stock?v=4
  nab_stock_5: curl {{ states('input_text.nabaztag_ip_address') }}stock?v=5
  nab_stock_6: curl {{ states('input_text.nabaztag_ip_address') }}stock?v=6
  nab_traffic_0: curl {{ states('input_text.nabaztag_ip_address') }}traffic?v=0
  nab_traffic_1: curl {{ states('input_text.nabaztag_ip_address') }}traffic?v=1
  nab_traffic_2: curl {{ states('input_text.nabaztag_ip_address') }}traffic?v=2
  nab_traffic_3: curl {{ states('input_text.nabaztag_ip_address') }}traffic?v=3
  nab_traffic_4: curl {{ states('input_text.nabaztag_ip_address') }}traffic?v=4
  nab_traffic_5: curl {{ states('input_text.nabaztag_ip_address') }}traffic?v=5
  nab_traffic_6: curl {{ states('input_text.nabaztag_ip_address') }}traffic?v=6
  nab_pollution_0: curl {{ states('input_text.nabaztag_ip_address') }}pollution?v=0
  nab_pollution_1: curl {{ states('input_text.nabaztag_ip_address') }}pollution?v=1
  nab_pollution_2: curl {{ states('input_text.nabaztag_ip_address') }}pollution?v=2
  nab_pollution_3: curl {{ states('input_text.nabaztag_ip_address') }}pollution?v=3
  nab_pollution_4: curl {{ states('input_text.nabaztag_ip_address') }}pollution?v=4
  nab_pollution_5: curl {{ states('input_text.nabaztag_ip_address') }}pollution?v=5
  nab_pollution_6: curl {{ states('input_text.nabaztag_ip_address') }}pollution?v=6
  nab_pollution_7: curl {{ states('input_text.nabaztag_ip_address') }}pollution?v=7
  nab_pollution_8: curl {{ states('input_text.nabaztag_ip_address') }}pollution?v=8
  nab_pollution_9: curl {{ states('input_text.nabaztag_ip_address') }}pollution?v=9
  nab_pollution_10: curl {{ states('input_text.nabaztag_ip_address') }}pollution?v=10
  nab_radio_1: curl {{ states('input_text.nabaztag_ip_address') }}play?u={{ states('input_text.nabaztag_radio_1_ip_address')}}
  nab_radio_2: curl {{ states('input_text.nabaztag_ip_address') }}play?u={{ states('input_text.nabaztag_radio_2_ip_address')}}
  nab_radio_3: curl {{ states('input_text.nabaztag_ip_address') }}play?u={{ states('input_text.nabaztag_radio_3_ip_address')}}
  nab_radio_4: curl {{ states('input_text.nabaztag_ip_address') }}play?u={{ states('input_text.nabaztag_radio_4_ip_address')}}
  nab_radio_5: curl {{ states('input_text.nabaztag_ip_address') }}play?u={{ states('input_text.nabaztag_radio_5_ip_address')}}
  nab_taichi_min:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/choregraphy.cgi?chor=taichi_min"'
  nab_taichi_max:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/choregraphy.cgi?chor=taichi_max"'
  nab_surprise:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/choregraphy.cgi?chor=surprise"'
  nab_nose_red:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/leds.cgi?led=nose&color=FF0000"'
  nab_nose_green:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/leds.cgi?led=nose&color=00FF00"'
  nab_nose_blue:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/leds.cgi?led=nose&color=0000FF"'
  nab_nose_yellow:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/leds.cgi?led=nose&color=FFFF00"'
  nab_nose_purple:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/leds.cgi?led=nose&color=FF00FF"'
  nab_nose_orange:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/leds.cgi?led=nose&color=FF8000"'
  nab_nose_off:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/leds.cgi?led=nose&color=000000"'
  nab_ear_left:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/ears.cgi?left={{ position }}"'
  nab_ear_right:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/ears.cgi?right={{ position }}"'
  nab_lang_en:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/config.cgi?lang=en"'
  nab_lang_fr:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/config.cgi?lang=fr"'
  nab_lang_de:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/config.cgi?lang=de"'
  nab_lang_es:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/config.cgi?lang=es"'
  nab_lang_it:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/config.cgi?lang=it"'
  nab_time_zone_paris:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/config.cgi?timezone=Europe/Paris"'
  nab_time_zone_london:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/config.cgi?timezone=Europe/London"'
  nab_time_zone_berlin:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/config.cgi?timezone=Europe/Berlin"'
  nab_time_zone_rome:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/config.cgi?timezone=Europe/Rome"'
  nab_time_zone_newyork:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/config.cgi?timezone=America/New_York"'
  nab_weather_current:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/weather.cgi?current=1"'
  nab_weather_forecast:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/weather.cgi?forecast=1"'
  nab_weather_off:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/weather.cgi?off=1"'
  nab_weather_0:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/weather_display.cgi?icon=sunny"'
  nab_weather_1:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/weather_display.cgi?icon=cloudy"'
  nab_weather_2:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/weather_display.cgi?icon=fog"'
  nab_weather_3:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/weather_display.cgi?icon=rainy"'
  nab_weather_4:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/weather_display.cgi?icon=snowy"'
  nab_weather_5:
    'curl -s "{{ states("input_text.nabaztag_ip_address") }}cgi-bin/weather_display.cgi?icon=stormy"'
#------------------------------------------------------------------------------
automation:
#------------------------------------------------------------------------------
  - alias: "Reboot Nabaztag at start"
    trigger:
      - trigger: homeassistant
        event: start
    action:
      - action: shell_command.nab_reboot
      - action: switch.turn_on
        target:
          entity_id: switch.nabaztaglife

  - alias: "Startup setup"
    trigger:
      - trigger: homeassistant
        event: start
    action:
      - action: group.set_visibility
        target:
          entity_id: group.nabaztag_locale_setup
        data:
          visible: false
      - action: input_number.set_value
        target:
          entity_id: input_number.bitcoin_previous_exchange_rate
        data:
          value: "{{ states('sensor.bitcoin_exchange_rate') | float }}"

  - alias: "Nabaztag Sounds"
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_sounds
    condition:
      - condition: template
        value_template: "{{ not is_state('input_select.nabaztag_sounds', 'Silent') }}"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_sounds
                state: "Beep"
            sequence:
              - action: shell_command.nab_communication
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_sounds
                state: "Chime"
            sequence:
              - action: shell_command.nab_ack
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_sounds
                state: "Bell"
            sequence:
              - action: shell_command.nab_ministop
        default:
          - action: shell_command.nab_abort
  - alias: "Nabaztag Radio"
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_radio
    condition:
      - condition: template
        value_template: "{{ not is_state('input_select.nabaztag_radio', 'Off') }}"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_radio
                state: "Radio 1"
            sequence:
              - action: shell_command.nab_radio_1
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_radio
                state: "Radio 2"
            sequence:
              - action: shell_command.nab_radio_2
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_radio
                state: "Radio 3"
            sequence:
              - action: shell_command.nab_radio_3
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_radio
                state: "Radio 4"
            sequence:
              - action: shell_command.nab_radio_4
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_radio
                state: "Radio 5"
            sequence:
              - action: shell_command.nab_radio_5
        default:
          - action: shell_command.nab_stop_radio
#******************************************************************************
  - alias: "Nabaztag Talk"
    trigger:
    - trigger: state
      entity_id: input_text.nabaztag_voice
    condition:
      condition: template
      value_template: "{{ not is_state('input_text.nabaztag_voice', ' ') }}"
    action:
    - action: script.nabaztag_talk
      data_template:
        message: "{{ states('input_text.nabaztag_voice') }}"
    - action: input_text.set_value
      data:
        entity_id: input_text.nabaztag_voice
        value: ' '
#******************************************************************************
  - alias: "Change Locale Setup"
    trigger:
    - trigger: state
      entity_id: input_boolean.show_nabaztag_locales
    action:
    - action: group.set_visibility
      entity_id: group.nabaztag_locale_setup
      data_template:
        visible: >
          {% if is_state("input_boolean.show_nabaztag_locales", "on") %}
            True
          {% else %}
            False
          {% endif %}
#******************************************************************************
  - alias: "Nabaztag Taichi"
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_taichi
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_taichi
                state: "Slow"
            sequence:
              - action: shell_command.nab_taichi_min
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_taichi
                state: "Fast"
            sequence:
              - action: shell_command.nab_taichi_max
        default:
          - action: shell_command.nab_surprise
#******************************************************************************
  - alias: "Nabaztag Nose"
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_nose
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Red"
            sequence:
              - action: shell_command.nab_nose_red
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Green"
            sequence:
              - action: shell_command.nab_nose_green
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Blue"
            sequence:
              - action: shell_command.nab_nose_blue
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Yellow"
            sequence:
              - action: shell_command.nab_nose_yellow
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Purple"
            sequence:
              - action: shell_command.nab_nose_purple
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Orange"
            sequence:
              - action: shell_command.nab_nose_orange
        default:
          - action: shell_command.nab_nose_off
#******************************************************************************
  - alias: "Nabaztag Left Ear"
    trigger:
      - trigger: state
        entity_id: input_number.nabaztag_left_ear
    action:
      - action: shell_command.nab_ear_left
        data:
          position: "{{ states('input_number.nabaztag_left_ear') | int }}"
#******************************************************************************
  - alias: "Nabaztag Right Ear"
    trigger:
      - trigger: state
        entity_id: input_number.nabaztag_right_ear
    action:
      - action: shell_command.nab_ear_right
        data:
          position: "{{ states('input_number.nabaztag_right_ear') | int }}"
#******************************************************************************
  - alias: "Nabaztag Body Language"
    trigger:
    - trigger: state
      entity_id: input_select.nabaztag_body_language
    action:
    - action: input_number.set_value
      data_template:
        entity_id: input_number.nabaztag_left_ear
        value: >
          {% if is_state("input_select.nabaztag_body_language", "Listening") %} 2.0
          {% elif is_state("input_select.nabaztag_body_language", "Curious") %} 16.0
          {% elif is_state("input_select.nabaztag_body_language", "Crazy") %} 3.0
          {% elif is_state("input_select.nabaztag_body_language", "Scared") %} 14.0
          {% elif is_state("input_select.nabaztag_body_language", "Sad") %} 11.0
          {% elif is_state("input_select.nabaztag_body_language", "Up") %} 0.0
          {% elif is_state("input_select.nabaztag_body_language", "Down") %} 10.0
          {% elif is_state("input_select.nabaztag_body_language", "Left") %} 11.0
          {% elif is_state("input_select.nabaztag_body_language", "Right") %} 0.0
          {% endif %}
    - action: input_number.set_value
      data_template:
        entity_id: input_number.nabaztag_right_ear
        value: >
          {% if is_state("input_select.nabaztag_body_language", "Listening") %} 2.0
          {% elif is_state("input_select.nabaztag_body_language", "Curious") %} 2.0
          {% elif is_state("input_select.nabaztag_body_language", "Crazy") %} 14.0
          {% elif is_state("input_select.nabaztag_body_language", "Scared") %} 14.0
          {% elif is_state("input_select.nabaztag_body_language", "Sad") %} 11.0
          {% elif is_state("input_select.nabaztag_body_language", "Up") %} 0.0
          {% elif is_state("input_select.nabaztag_body_language", "Down") %} 10.0
          {% elif is_state("input_select.nabaztag_body_language", "Left") %} 0.0
          {% elif is_state("input_select.nabaztag_body_language", "Right") %} 11.0
          {% endif %}
#******************************************************************************
  - alias: "Nabaztag Language"
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_language
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_language
                state: "en"
            sequence:
              - action: shell_command.nab_lang_en
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_language
                state: "fr"
            sequence:
              - action: shell_command.nab_lang_fr
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_language
                state: "de"
            sequence:
              - action: shell_command.nab_lang_de
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_language
                state: "es"
            sequence:
              - action: shell_command.nab_lang_es
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_language
                state: "it"
            sequence:
              - action: shell_command.nab_lang_it
        default:
          - action: shell_command.nab_surprise
#******************************************************************************
  - alias: "Nabaztag Time Zone"
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_time_zone
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_time_zone
                state: "Europe/Paris"
            sequence:
              - action: shell_command.nab_time_zone_paris
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_time_zone
                state: "Europe/London"
            sequence:
              - action: shell_command.nab_time_zone_london
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_time_zone
                state: "Europe/Berlin"
            sequence:
              - action: shell_command.nab_time_zone_berlin
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_time_zone
                state: "Europe/Rome"
            sequence:
              - action: shell_command.nab_time_zone_rome
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_time_zone
                state: "America/New_York"
            sequence:
              - action: shell_command.nab_time_zone_newyork
        default:
          - action: shell_command.nab_time_zone_paris
#******************************************************************************
#*************************** NABAZTAG INFO CENTER *****************************
#******************************************************************************

#******************************************************************************
#*************************** NABAZTAG CLEAR INFO ******************************
#******************************************************************************
  - alias: "Nabaztag No Info"
    trigger:
    - trigger: state
      entity_id: input_select.nabaztag_show_info
    condition:
    - condition: state
      entity_id: 'input_select.nabaztag_show_info'
      state: ' '
    action:
    - action: shell_command.nab_clear
#******************************************************************************
#****************************** NABAZTAG WEATHER ******************************
#******************************************************************************
  - alias: "Nabaztag Weather"
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_weather
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_weather
                state: "Current"
            sequence:
              - action: shell_command.nab_weather_current
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_weather
                state: "Forecast"
            sequence:
              - action: shell_command.nab_weather_forecast
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_weather
                state: "Both"
            sequence:
              - action: shell_command.nab_weather_current
              - delay: "00:00:02"
              - action: shell_command.nab_weather_forecast
        default:
          - action: shell_command.nab_weather_off
#******************************************************************************
  - alias: "Nabaztag Weather Info"
    trigger:
      - trigger: state
        entity_id: weather.home
      - trigger: state
        entity_id: input_select.nabaztag_show_info
      - trigger: time
        at:
          - "00:08:00"
          - "00:18:00"
          - "00:28:00"
          - "00:38:00"
          - "00:48:00"
          - "00:58:00"
    condition:
      - condition: and
        conditions:
          - condition: state
            entity_id: input_boolean.nabaztag_is_awake
            state: "on"
          - condition: or
            conditions:
              - condition: state
                entity_id: input_select.nabaztag_show_info
                state: "Weather"
              - condition: state
                entity_id: input_select.nabaztag_show_info
                state: "All"
    action:
      - action: shell_command.nab_clear
      - delay: "00:00:01"
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: weather.home
                    state: "sunny"
                  - condition: state
                    entity_id: weather.home
                    state: "clear-night"
            sequence:
              - action: shell_command.nab_weather_0
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_body_language
                data:
                  option: "Happy"
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_weather
                data:
                  option: "Current"
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: weather.home
                    state: "cloudy"
                  - condition: state
                    entity_id: weather.home
                    state: "partlycloudy"
            sequence:
              - action: shell_command.nab_weather_1
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_body_language
                data:
                  option: "Normal"
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_weather
                data:
                  option: "Current"
          - conditions:
              - condition: state
                entity_id: weather.home
                state: "fog"
            sequence:
              - action: shell_command.nab_weather_2
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_body_language
                data:
                  option: "Sad"
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_weather
                data:
                  option: "Current"
          - conditions:
              - condition: state
                entity_id: weather.home
                state: "rainy"
            sequence:
              - action: shell_command.nab_weather_3
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_body_language
                data:
                  option: "Sad"
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_weather
                data:
                  option: "Current"
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: weather.home
                    state: "snowy"
                  - condition: state
                    entity_id: weather.home
                    state: "snowy-rainy"
            sequence:
              - action: shell_command.nab_weather_4
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_body_language
                data:
                  option: "Excited"
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_weather
                data:
                  option: "Current"
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: weather.home
                    state: "lightning"
                  - condition: state
                    entity_id: weather.home
                    state: "lightning-rainy"
                  - condition: state
                    entity_id: weather.home
                    state: "windy"
            sequence:
              - action: shell_command.nab_weather_5
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_body_language
                data:
                  option: "Normal"
              - action: input_select.select_option
                target:
                  entity_id: input_select.nabaztag_weather
                data:
                  option: "Current"
        default:
          - action: script.nabaztag_info_off
#******************************************************************************
#***************************** NABAZTAG STOCKS ********************************
#******************************************************************************
  - alias: "Nabaztag Stock"
    trigger:
    - trigger: state
      entity_id: input_select.nabaztag_stocks
    action:
    - action_template: >
        {% if is_state("input_select.nabaztag_stocks", "---") %} shell_command.nab_stock_0
        {% elif is_state("input_select.nabaztag_stocks", "--") %} shell_command.nab_stock_1
        {% elif is_state("input_select.nabaztag_stocks", "-") %} shell_command.nab_stock_2
        {% elif is_state("input_select.nabaztag_stocks", "0") %} shell_command.nab_stock_3
        {% elif is_state("input_select.nabaztag_stocks", "+") %} shell_command.nab_stock_4
        {% elif is_state("input_select.nabaztag_stocks", "++") %} shell_command.nab_stock_5
        {% elif is_state("input_select.nabaztag_stocks", "+++") %} shell_command.nab_stock_6
        {% else %}
          shell_command.nab_abort
        {% endif %}
#******************************************************************************
  - alias: "Nabaztag Bitcoin Difference"
    trigger:
    - trigger: state
      entity_id: sensor.timestamp
    action:
    - action: input_number.set_value
      data_template:
        entity_id: input_number.bitcoin_value_difference
        value: "{{ ( states('sensor.exchange_rate_1_btc') | float ) - ( states('input_number.bitcoin_previous_exchange_rate') | float ) }}"
    - action: input_number.set_value
      data_template:
        entity_id: input_number.bitcoin_previous_exchange_rate
        value: "{{ states('sensor.exchange_rate_1_btc') }}"
#******************************************************************************
  - alias: "Nabaztag Bitcoin Exchange"
    trigger:
    - trigger: state
      entity_id: input_number.bitcoin_value_difference
    - trigger: state
      entity_id: input_select.nabaztag_show_info
    - trigger: time
      minutes: 2
      seconds: 00
    - trigger: time
      minutes: 12
      seconds: 00
    - trigger: time
      minutes: 22
      seconds: 00
    - trigger: time
      minutes: 32
      seconds: 00
    - trigger: time
      minutes: 42
      seconds: 00
    - trigger: time
      minutes: 52
      seconds: 00
    condition:
      condition: and
      conditions:
      - condition: template
        value_template: "{{ not is_state('input_number.bitcoin_value_difference', '0.0') }}"
      - condition: state
        entity_id: 'input_boolean.nabaztag_is_awake'
        state: 'on'
      - condition: or
        conditions:
        - condition: state
          entity_id: 'input_select.nabaztag_show_info'
          state: 'Stocks'
        - condition: state
          entity_id: 'input_select.nabaztag_show_info'
          state: 'All'
    action:
    - action: shell_command.nab_clear
#    - delay:
#          seconds: 1
    - action_template: >
        {% if states('input_number.bitcoin_value_difference') | float < -100 %} shell_command.nab_stock_0
        {% elif states('input_number.bitcoin_value_difference') | float < -50 %} shell_command.nab_stock_1
        {% elif states('input_number.bitcoin_value_difference') | float < -5 %} shell_command.nab_stock_2
        {% elif states('input_number.bitcoin_value_difference') | float > 100 %} shell_command.nab_stock_6
        {% elif states('input_number.bitcoin_value_difference') | float > 50 %} shell_command.nab_stock_5
        {% elif states('input_number.bitcoin_value_difference') | float > 5 %} shell_command.nab_stock_4
        {% else %}
          shell_command.nab_stock_3
        {% endif %}
#    - delay:
#          seconds: 1
    - action: input_select.select_option
      entity_id: input_select.nabaztag_body_language
      data_template:
        option: >
          {% if states('input_number.bitcoin_value_difference') | float < -100 %}Crazy
          {% elif states('input_number.bitcoin_value_difference') | float < -50 %}Left
          {% elif states('input_number.bitcoin_value_difference') | float < -5 %}Left
          {% elif states('input_number.bitcoin_value_difference') | float > 5 %}Right
          {% elif states('input_number.bitcoin_value_difference') | float > 50 %}Right
          {% elif states('input_number.bitcoin_value_difference') | float > 100 %}Crazy
          {% else %}Up
          {% endif %}
#    - delay:
#          seconds: 1
    - action: input_select.select_option
      entity_id: input_select.nabaztag_stocks
      data_template:
        option: >
          {% if states('input_number.bitcoin_value_difference') | float < -100 %}---
          {% elif states('input_number.bitcoin_value_difference') | float < -50 %}--
          {% elif states('input_number.bitcoin_value_difference') | float < -5 %}-
          {% elif states('input_number.bitcoin_value_difference') | float > 5 %}+
          {% elif states('input_number.bitcoin_value_difference') | float > 50 %}++
          {% elif states('input_number.bitcoin_value_difference') | float > 100 %}+++
          {% else %}0
          {% endif %}
#******************************************************************************
#***************************** NABAZTAG TRAFFIC *******************************
#******************************************************************************
  - alias: "Nabaztag Traffic"
    trigger:
    - trigger: state
      entity_id: input_select.nabaztag_traffic
    action:
    - action_template: >
        {% if is_state("input_select.nabaztag_traffic", "Free") %} shell_command.nab_traffic_0
        {% elif is_state("input_select.nabaztag_traffic", "Okay") %} shell_command.nab_traffic_1
        {% elif is_state("input_select.nabaztag_traffic", "Moderate") %} shell_command.nab_traffic_2
        {% elif is_state("input_select.nabaztag_traffic", "Normal") %} shell_command.nab_traffic_3
        {% elif is_state("input_select.nabaztag_traffic", "Heavy") %} shell_command.nab_traffic_4
        {% elif is_state("input_select.nabaztag_traffic", "Congested") %} shell_command.nab_traffic_5
        {% elif is_state("input_select.nabaztag_traffic", "Extreme") %} shell_command.nab_traffic_6
        {% else %}
          shell_command.nab_abort
        {% endif %}
#******************************************************************************
  - alias: "Nabaztag Google Traffic"
    trigger:
    - trigger: state
      entity_id: sensor.home_to_work
    - trigger: state
      entity_id: input_select.nabaztag_show_info
    - trigger: time
      minutes: 4
      seconds: 00
    - trigger: time
      minutes: 14
      seconds: 00
    - trigger: time
      minutes: 24
      seconds: 00
    - trigger: time
      minutes: 34
      seconds: 00
    - trigger: time
      minutes: 44
      seconds: 00
    - trigger: time
      minutes: 54
      seconds: 00
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: 'input_boolean.nabaztag_is_awake'
        state: 'on'
      - condition: or
        conditions:
        - condition: state
          entity_id: 'input_select.nabaztag_show_info'
          state: 'Traffic'
        - condition: state
          entity_id: 'input_select.nabaztag_show_info'
          state: 'All'
    action:
    - action: shell_command.nab_clear
#    - delay:
#          seconds: 1
    - action_template: >
        {% if states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 30 ) %} shell_command.nab_traffic_6
        {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 25 ) %} shell_command.nab_traffic_5
        {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 20 ) %} shell_command.nab_traffic_4
        {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 15 ) %} shell_command.nab_traffic_3
        {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 10 ) %} shell_command.nab_traffic_2
        {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 5 ) %} shell_command.nab_traffic_1
        {% else %}
          shell_command.nab_traffic_0
        {% endif %}
#    - delay:
#          seconds: 1
    - action: input_select.select_option
      entity_id: input_select.nabaztag_body_language
      data_template:
        option: >
          {% if states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 30 ) %}Crazy
          {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 25 ) %}Left
          {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 20 ) %}Sad
          {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 15 ) %}Scared
          {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 10 ) %}Curious
          {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 5 ) %}Listening
          {% else %}
            Up
          {% endif %}
#    - delay:
#          seconds: 1
    - action: input_select.select_option
      entity_id: input_select.nabaztag_traffic
      data_template:
        option: >
          {% if states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 30 ) %}Extreme
          {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 25 ) %}Congested
          {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 20 ) %}Heavy
          {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 15 ) %}Normal
          {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 10 ) %}Moderate
          {% elif states('sensor.home_to_work') | int > ( states('input_number.time_to_work') | int + (states('input_number.time_to_work') | int / 100 ) * 5 ) %}Okay
          {% else %}
            Free
          {% endif %}
#******************************************************************************
#*************************** NABAZTAG POLLUTION *******************************
#******************************************************************************
  - alias: "Nabaztag Pollution"
    trigger:
    - trigger: state
      entity_id: input_select.nabaztag_pollution
    action:
    - action_template: >
        {% if is_state("input_select.nabaztag_pollution", "0") %} shell_command.nab_pollution_0
        {% elif is_state("input_select.nabaztag_pollution", "1") %} shell_command.nab_pollution_1
        {% elif is_state("input_select.nabaztag_pollution", "2") %} shell_command.nab_pollution_2
        {% elif is_state("input_select.nabaztag_pollution", "3") %} shell_command.nab_pollution_3
        {% elif is_state("input_select.nabaztag_pollution", "4") %} shell_command.nab_pollution_4
        {% elif is_state("input_select.nabaztag_pollution", "5") %} shell_command.nab_pollution_5
        {% elif is_state("input_select.nabaztag_pollution", "6") %} shell_command.nab_pollution_6
        {% elif is_state("input_select.nabaztag_pollution", "7") %} shell_command.nab_pollution_7
        {% elif is_state("input_select.nabaztag_pollution", "8") %} shell_command.nab_pollution_8
        {% elif is_state("input_select.nabaztag_pollution", "9") %} shell_command.nab_pollution_9
        {% elif is_state("input_select.nabaztag_pollution", "10") %} shell_command.nab_pollution_10
        {% else %}
          shell_command.nab_abort
        {% endif %}
#******************************************************************************
  - alias: "Nabaztag Airvisual Pollution"
    trigger:
    - trigger: state
      entity_id: sensor.us_air_quality_index
    - trigger: state
      entity_id: input_select.nabaztag_show_info
    - trigger: time
      minutes: 6
      seconds: 00
    - trigger: time
      minutes: 16
      seconds: 00
    - trigger: time
      minutes: 26
      seconds: 00
    - trigger: time
      minutes: 36
      seconds: 00
    - trigger: time
      minutes: 46
      seconds: 00
    - trigger: time
      minutes: 56
      seconds: 00
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: 'input_boolean.nabaztag_is_awake'
        state: 'on'
      - condition: or
        conditions:
        - condition: state
          entity_id: 'input_select.nabaztag_show_info'
          state: 'Pollution'
        - condition: state
          entity_id: 'input_select.nabaztag_show_info'
          state: 'All'
    action:
    - action: shell_command.nab_clear
#    - delay:
#          seconds: 1
    - action_template: >
        {% if states('sensor.us_air_quality_index') | int > 300 %} shell_command.nab_pollution_10
        {% elif states('sensor.us_air_quality_index') | int > 270 %} shell_command.nab_pollution_9
        {% elif states('sensor.us_air_quality_index') | int > 240 %} shell_command.nab_pollution_8
        {% elif states('sensor.us_air_quality_index') | int > 210 %} shell_command.nab_pollution_7
        {% elif states('sensor.us_air_quality_index') | int > 180 %} shell_command.nab_pollution_6
        {% elif states('sensor.us_air_quality_index') | int > 150 %} shell_command.nab_pollution_5
        {% elif states('sensor.us_air_quality_index') | int > 120 %} shell_command.nab_pollution_4
        {% elif states('sensor.us_air_quality_index') | int > 90 %} shell_command.nab_pollution_3
        {% elif states('sensor.us_air_quality_index') | int > 60 %} shell_command.nab_pollution_2
        {% elif states('sensor.us_air_quality_index') | int > 30 %} shell_command.nab_pollution_1
        {% elif states('sensor.us_air_quality_index') | int < 30 %} shell_command.nab_pollution_0
        {% endif %}
#    - delay:
#          seconds: 1
    - action: input_select.select_option
      entity_id: input_select.nabaztag_body_language
      data_template:
        option: >
          {% if states('sensor.us_air_quality_index') | int > 300 %}Crazy
          {% elif states('sensor.us_air_quality_index') | int > 270 %}Sad
          {% elif states('sensor.us_air_quality_index') | int > 240 %}Sad
          {% elif states('sensor.us_air_quality_index') | int > 210 %}Scared
          {% elif states('sensor.us_air_quality_index') | int > 180 %}Scared
          {% elif states('sensor.us_air_quality_index') | int > 150 %}Curious
          {% elif states('sensor.us_air_quality_index') | int > 120 %}Curious
          {% elif states('sensor.us_air_quality_index') | int > 90 %}Listening
          {% elif states('sensor.us_air_quality_index') | int > 60 %}Listening
          {% elif states('sensor.us_air_quality_index') | int > 30 %}Up
          {% elif states('sensor.us_air_quality_index') | int < 30 %}Up
          {% endif %}
#    - delay:
#          seconds: 1
    - action: input_select.select_option
      entity_id: input_select.nabaztag_pollution
      data_template:
        option: >
          {% if states('sensor.us_air_quality_index') | int > 300 %}10
          {% elif states('sensor.us_air_quality_index') | int > 270 %}9
          {% elif states('sensor.us_air_quality_index') | int > 240 %}8
          {% elif states('sensor.us_air_quality_index') | int > 210 %}7
          {% elif states('sensor.us_air_quality_index') | int > 180 %}6
          {% elif states('sensor.us_air_quality_index') | int > 150 %}5
          {% elif states('sensor.us_air_quality_index') | int > 120 %}4
          {% elif states('sensor.us_air_quality_index') | int > 90 %}3
          {% elif states('sensor.us_air_quality_index') | int > 60 %}2
          {% elif states('sensor.us_air_quality_index') | int > 30 %}1
          {% elif states('sensor.us_air_quality_index') | int < 30 %}0
          {% endif %}
#******************************************************************************
#*********************** NABAZTAG TIME MANAGEMENT *****************************
#******************************************************************************
  - alias: "Weather info times"
    trigger:
    - trigger: time
      at: '7:30:00'
    action:
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_show_info
        option: ' '
    - delay:
          seconds: 1
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_sounds
        option: 'Communication'
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_show_info
        option: 'Weather'
#******************************************************************************
  - alias: "Stocks info times"
    trigger:
    - trigger: time
      at: '7:35:00'
    action:
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_show_info
        option: ' '
    - delay:
          seconds: 1
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_sounds
        option: 'Ack'
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_show_info
        option: 'Stocks'
#******************************************************************************
  - alias: "Traffic info times"
    trigger:
    - trigger: time
      at: '7:50:00'
    action:
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_show_info
        option: ' '
    - delay:
          seconds: 1
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_sounds
        option: 'Ack'
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_show_info
        option: 'Traffic'
#******************************************************************************
  - alias: "Pollution info times"
    trigger:
    - trigger: time
      at: '7:40:00'
    - trigger: time
      at: '17:30:00'
    action:
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_show_info
        option: ' '
    - delay:
          seconds: 1
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_sounds
        option: 'Ack'
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_show_info
        option: 'Pollution'
#******************************************************************************
  - alias: "Back to All Info Times"
    trigger:
    - trigger: time
      at: '8:00:00'
    action:
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_show_info
        option: ' '
    - delay:
          seconds: 1
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_sounds
        option: 'Ack'
    - action: input_select.select_option
      data:
        entity_id: input_select.nabaztag_show_info
        option: 'All'
#******************************************************************************
  - alias: "Wake up times for the Nabaztag"
    trigger:
    - trigger: time
      at: '7:30:00'
    - trigger: time
      at: '11:59:00'
    - trigger: time
      at: '16:59:00'
    action:
    - action: switch.turn_on
      entity_id: switch.nabaztaglife
    - action: input_boolean.turn_on
      entity_id: input_boolean.nabaztag_is_awake
#******************************************************************************
  - alias: "Sleep times for the Nabaztag during the day"
    trigger:
    - trigger: time
      at: '8:00:00'
    - trigger: time
      at: '13:40:00'
    condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
    action:
    - action: input_boolean.turn_off
      entity_id: input_boolean.nabaztag_is_awake
#******************************************************************************
  - alias: "Sleep time for the Nabaztag during the night"
    trigger:
    - trigger: time
      at: '23:30:00'
    action:
    - action: input_boolean.turn_off
      entity_id: input_boolean.nabaztag_is_awake
#******************************************************************************
  - alias: "Keep it off if it resets and turns on"
    trigger:
    - trigger: time
      minutes: '/1'
      seconds: 00
    condition:
    - condition: state
      entity_id: 'input_boolean.nabaztag_is_awake'
      state: 'off'
    action:
    - action: shell_command.nab_sleep
