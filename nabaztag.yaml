# =========================
# Nabaztag - Variables
# =========================
input_text:
  nabaztag_ip_address:
    name: "Adresse IP Nabaztag"
    initial: "192.168.0.13"

  nabaztag_message:
    name: "Message à dire"
    initial: "Bonjour, je m'appelle Nabaztag"
    max: 255
  # Configuration
  nabaztag_latitude:
    name: "Latitude"
    initial: "48.8566"   # Exemple Paris
  nabaztag_longitude:
    name: "Longitude"
    initial: "2.3522"    # Exemple Paris

input_select:
  nabaztag_ear_position:
    name: "Position des oreilles"
    options: ["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16"]
    initial: "5"

  nabaztag_nose_state:
    name: "État du nez"
    options: ["off","on","todo","urgent","panic"]
    initial: "off"

  nabaztag_weather:
    name: "Météo"
    options: ["soleil","nuages","brouillard","pluie","neige","orage"]
    initial: "soleil"

  nabaztag_traffic:
    name: "Trafic"
    options: ["libre","correct","modéré","normal","dense","congestionné","extrême"]
    initial: "normal"

  nabaztag_stock:
    name: "Bourse"
    options: ["---","--","-","0","+","++","+++"]
    initial: "0"

  # Configuration
  nabaztag_language:
    name: "Langue"
    options:
      - "fr"
      - "en"
      - "es"
      - "de"
      - "it"
    initial: "fr"

  nabaztag_timezone_city:
    name: "Ville/Timezone"
    options:
      - "Europe/Paris"
      - "Europe/London"
      - "America/New_York"
      - "Asia/Tokyo"
    initial: "Europe/Paris"

input_number:
  nabaztag_pollution:
    name: "Pollution"
    min: 0
    max: 10
    step: 1
    mode: slider
    initial: 3

  # Configuration
  nabaztag_wake_hour:
    name: "Heure de réveil"
    min: 0
    max: 23
    step: 1
    initial: 7

  nabaztag_sleep_hour:
    name: "Heure de coucher"
    min: 0
    max: 23
    step: 1
    initial: 23

  # Configuration
input_boolean:
  nabaztag_daylight_saving:
    name: "Heure d'été"
    initial: off

# =========================
# Nabaztag - Scripts
# =========================
script:
  # Oreilles
  nabaztag_move_left_ear:
    alias: "Nabaztag - Oreille gauche"
    sequence:
      - action: rest_command.nabaztag_left_ear
        data:
          position: "{{ states('input_select.nabaztag_ear_position') }}"

  nabaztag_move_right_ear:
    alias: "Nabaztag - Oreille droite"
    sequence:
      - action: rest_command.nabaztag_right_ear
        data:
          position: "{{ states('input_select.nabaztag_ear_position') }}"

  nabaztag_move_both_ears:
    alias: "Nabaztag - Les deux oreilles"
    sequence:
      - action: rest_command.nabaztag_left_ear
        data:
          position: "{{ states('input_select.nabaztag_ear_position') }}"
      - delay: "00:00:01"
      - action: rest_command.nabaztag_right_ear
        data:
          position: "{{ states('input_select.nabaztag_ear_position') }}"

  # Nez
  nabaztag_set_nose:
    alias: "Nabaztag - État du nez"
    sequence:
      - action: rest_command.nabaztag_nose
        data:
          state: >
            {% set s = states('input_select.nabaztag_nose_state') %}
            {% if s == 'off' %}0{% elif s == 'on' %}1{% elif s == 'todo' %}2{% elif s == 'urgent' %}3{% elif s == 'panic' %}4{% endif %}

  # Météo
  nabaztag_set_weather:
    alias: "Nabaztag - Météo"
    sequence:
      - action: rest_command.nabaztag_weather
        data:
          weather: >
            {% set w = states('input_select.nabaztag_weather') %}
            {% if w == 'soleil' %}0{% elif w == 'nuages' %}1{% elif w == 'brouillard' %}2{% elif w == 'pluie' %}3{% elif w == 'neige' %}4{% elif w == 'orage' %}5{% endif %}

  # Trafic
  nabaztag_set_traffic:
    alias: "Nabaztag - Trafic"
    sequence:
      - action: rest_command.nabaztag_traffic
        data:
          traffic: >
            {% set t = states('input_select.nabaztag_traffic') %}
            {% if t == 'libre' %}0{% elif t == 'correct' %}1{% elif t == 'modéré' %}2{% elif t == 'normal' %}3{% elif t == 'dense' %}4{% elif t == 'congestionné' %}5{% elif t == 'extrême' %}6{% endif %}

  # Pollution
  nabaztag_set_pollution:
    alias: "Nabaztag - Pollution"
    sequence:
      - action: rest_command.nabaztag_pollution
        data:
          pollution: "{{ states('input_number.nabaztag_pollution') | int }}"

  # Bourse
  nabaztag_set_stock:
    alias: "Nabaztag - Bourse"
    sequence:
      - action: rest_command.nabaztag_stock
        data:
          stock: >
            {% set s = states('input_select.nabaztag_stock') %}
            {% if s == '---' %}0{% elif s == '--' %}1{% elif s == '-' %}2{% elif s == '0' %}3{% elif s == '+' %}4{% elif s == '++' %}5{% elif s == '+++' %}6{% endif %}

  # Parole
  nabaztag_talk:
    alias: "Nabaztag - Parler"
    sequence:
      - action: rest_command.nabaztag_say
        data:
          message: "{{ states('input_text.nabaztag_message') }}"

  # Sons
  nabaztag_ack:
    alias: "Nabaztag - Son Ack"
    sequence:
      - action: rest_command.nabaztag_ack

  nabaztag_abort:
    alias: "Nabaztag - Son Abort"
    sequence:
      - action: rest_command.nabaztag_abort

  nabaztag_comm:
    alias: "Nabaztag - Son Communication"
    sequence:
      - action: rest_command.nabaztag_comm

  nabaztag_ministop:
    alias: "Nabaztag - Son Ministop"
    sequence:
      - action: rest_command.nabaztag_ministop

  # Taichi
  nabaztag_taichi_stop:
    alias: "Nabaztag - Taichi Stop"
    sequence:
      - action: rest_command.nabaztag_taichi
        data:
          level: "0"

  nabaztag_taichi_min:
    alias: "Nabaztag - Taichi Min"
    sequence:
      - action: rest_command.nabaztag_taichi
        data:
          level: "40"
      - delay: "00:00:05"
      - action: rest_command.nabaztag_taichi
        data:
          level: 1000

  nabaztag_taichi_medium:
    alias: "Nabaztag - Taichi Moyen"
    sequence:
      - action: rest_command.nabaztag_taichi
        data:
          level: "80"
      - delay: "00:00:05"
      - action: rest_command.nabaztag_taichi
        data:
          level: 1000

  nabaztag_taichi_max:
    alias: "Nabaztag - Taichi Max"
    sequence:
      - action: rest_command.nabaztag_taichi
        data:
          level: "255"
      - delay: "00:00:05"
      - action: rest_command.nabaztag_taichi
        data:
          level: 1000

  # Configuration
  nabaztag_apply_setup:
    alias: "Nabaztag - Appliquer Setup"
    sequence:
      - action: rest_command.nabaztag_setup

# =========================
# Nabaztag - Rest Commands
# =========================
rest_command:
  nabaztag_say:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/say?t={{ message | urlencode }}"
    method: get
    timeout: 30

  nabaztag_left_ear:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/left?p={{ position }}&d=0"
    method: get
    timeout: 10

  nabaztag_right_ear:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/right?p={{ position }}&d=0"
    method: get
    timeout: 10

  nabaztag_nose:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/nose?v={{ state }}"
    method: get
    timeout: 10

  nabaztag_weather:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/weather?v={{ weather }}"
    method: get
    timeout: 10

  nabaztag_traffic:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/traffic?v={{ traffic }}"
    method: get
    timeout: 10

  nabaztag_pollution:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/pollution?v={{ pollution }}"
    method: get
    timeout: 10

  nabaztag_stock:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/stock?v={{ stock }}"
    method: get
    timeout: 10

  # Sons
  nabaztag_ack:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/sound/ack"
    method: get
    timeout: 10

  nabaztag_abort:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/sound/abort"
    method: get
    timeout: 10

  nabaztag_comm:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/sound/comm"
    method: get
    timeout: 10

  nabaztag_ministop:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/sound/ministop"
    method: get
    timeout: 10

  # Taichi
  nabaztag_taichi:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/taichi?v={{ level }}"
    method: get
    timeout: 10

  # Configuration
  nabaztag_setup:
    url: >-
      http://{{ states('input_text.nabaztag_ip_address') }}/setup?j={{ states('input_text.nabaztag_latitude') }}&k={{ states('input_text.nabaztag_longitude') }}&l={{ states('input_select.nabaztag_language') }}&c={{ states('input_select.nabaztag_timezone_city') }}&d={{ 1 if is_state('input_boolean.nabaztag_daylight_saving', 'on') else 0 }}&w={{ states('input_number.nabaztag_wake_hour') }}&b={{ states('input_number.nabaztag_sleep_hour') }}
    method: get
    timeout: 30