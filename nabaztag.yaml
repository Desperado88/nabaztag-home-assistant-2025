###############################################################################
#                                                                             #
#                             NABAZTAG PACKAGE                                #
#                         Compatible Home Assistant 2025                      #
#                                                                             #
###############################################################################
# Change your Nabaztag ip, tts language and your favourite radio stations url # 
# in the input_text section.                                                  #
#                                                                             #
# Change when you want to receive automatically weather, stocks, traffic and  #
# pollution informations in the NABAZTAG TIME MANAGEMENT section.             #
#                                                                             #
# Here is the tab for your HA main page:                                      #
#                                                                             #
#  Tab_Nabaztag:                                                              #
#    name: Nabaztag                                                           #
#    view: yes                                                                #
#    icon: mdi:carrot                                                         #
#    entities:                                                                #
#      - group.nabaztag_utils                                                 #
#      - group.nabaztag_body                                                  #
#      - group.nabaztag_lights                                                #
#      - group.nabaztag_locale_setup                                          #
#                                                                             #
#------------------------------------------------------------------------------
input_text:
#------------------------------------------------------------------------------
  nabaztag_ip_address:
    name: Nabaztag Ip Address
    initial: http://192.168.99.15/ # Indiquer ici l'ip du nabaztag
  nabaztag_tts_language:
    name: Nabaztag Tts Language
    initial: fr # Changer la langue si besoin
  nabaztag_radio_1_ip_address:
    name: Nabaztag Radio 1 Ip Address
    initial: http://37.247.50.30/MC2.mp3
  nabaztag_radio_2_ip_address:
    name: Nabaztag Radio 2 Ip Address
    initial: http://icecast.vrtcdn.be/mnm_hits-high.mp3
  nabaztag_radio_3_ip_address:
    name: Nabaztag Radio 3 Ip Address
    initial: http://shoutcast.rtl.it:3010/stream/1/
  nabaztag_radio_4_ip_address:
    name: Nabaztag Radio 4 Ip Address
    initial: http://shoutcast.rtl.it:3010/stream/1/
  nabaztag_radio_5_ip_address:
    name: Nabaztag Radio 5 Ip Address
    initial: http://shoutcast.rtl.it:3010/stream/1/
  nabaztag_voice:
    name: TTS
    initial: Say Something...
    min: 1
    max: 255 # valeur original 500
    mode: text

#------------------------------------------------------------------------------
sensor:
#------------------------------------------------------------------------------
# Weather Sensor - Remplacé par l'intégration météo native
# Utiliser l'intégration Open Weather Map ou météo-france via l'interface
# {{ states('weather.home') }} >>> État météo
# Configurer votre intégration météo préférée dans Configuration > Intégrations

# Stocks Sensor - Bitcoin remplacé par REST sensor
  - platform: rest
    name: Bitcoin Exchange Rate
    resource: https://api.coinbase.com/v2/exchange-rates?currency=BTC
    value_template: "{{ value_json.data.rates.EUR | float }}"
    unit_of_measurement: "EUR"
    scan_interval: 300
    icon: mdi:currency-btc

# Traffic Sensor - Google Maps Travel Time mis à jour
  - platform: google_travel_time
    api_key: !secret google_distance_matrix_api_key
    name: Home To Work
    origin: Verona, Italy
    destination: Modena, Italy
    travel_mode: driving
    unit_system: metric
    scan_interval: 300

# Template sensors
  - platform: template
    sensors:
      traffic_status:
        friendly_name: "Traffic Status"
        value_template: >-
          {% set duration = states('sensor.home_to_work') | float %}
          {% set normal_time = states('input_number.time_to_work') | float %}
          {% if duration == 0 %}
            unknown
          {% elif duration <= normal_time * 1.1 %}
            good
          {% elif duration <= normal_time * 1.3 %}
            moderate
          {% else %}
            heavy
          {% endif %}
        icon_template: >-
          {% set status = states('sensor.traffic_status') %}
          {% if status == 'good' %}
            mdi:car-speed-limiter
          {% elif status == 'moderate' %}
            mdi:car-brake-alert
          {% else %}
            mdi:car-brake-hold
          {% endif %}

# Pollution Sensor - Remplacé par REST sensor pour OpenWeather Air Pollution API
  - platform: rest
    name: Air Quality Index
    resource_template: "https://api.openweathermap.org/data/2.5/air_pollution?lat={{ state_attr('zone.home', 'latitude') }}&lon={{ state_attr('zone.home', 'longitude') }}&appid=!secret openweather_api_key"
    value_template: "{{ value_json.list[0].main.aqi }}"
    unit_of_measurement: "AQI"
    scan_interval: 1800
    icon: mdi:air-filter

  - platform: template
    sensors:
      air_quality_status:
        friendly_name: "Air Quality Status"
        value_template: >-
          {% set aqi = states('sensor.air_quality_index') | int %}
          {% if aqi == 1 %}
            Good
          {% elif aqi == 2 %}
            Fair
          {% elif aqi == 3 %}
            Moderate
          {% elif aqi == 4 %}
            Poor
          {% elif aqi == 5 %}
            Very Poor
          {% else %}
            Unknown
          {% endif %}

#------------------------------------------------------------------------------
group:
#------------------------------------------------------------------------------
  nabaztag_body:
    name: Nabaztag Body
    entities:
      - input_boolean.nabaztag_taichi
      - input_select.nabaztag_taichi
      - input_boolean.nabaztag_nose
      - input_select.nabaztag_nose
      - input_number.nabaztag_left_ear
      - input_number.nabaztag_right_ear
      - input_select.nabaztag_body_language

  nabaztag_lights:
    name: Nabaztag Info
    entities:
      - input_select.nabaztag_show_info
      - input_select.nabaztag_weather
      - input_select.nabaztag_stocks
      - input_select.nabaztag_traffic
      - input_select.nabaztag_pollution
      - script.nabaztag_info_off

  nabaztag_utils:
    name: Nabaztag Utils
    entities:
      - input_boolean.nabaztaglife
      - script.nabaztag_surprise
      - script.nabaztag_stop
      - input_select.nabaztag_sounds
      - input_select.nabaztag_radio
      - input_text.nabaztag_voice
      - input_boolean.show_nabaztag_locales

  nabaztag_locale_setup:
    name: Nabaztag Locales
    entities:
      - input_select.nabaztag_language
      - input_select.nabaztag_time_zone
      - script.nabaztag_update
      - script.nabaztag_reboot

#------------------------------------------------------------------------------
input_boolean:
#------------------------------------------------------------------------------
  show_nabaztag_locales:
    name: Locales Setup
    initial: off
    icon: mdi:tune

  nabaztaglife:
    name: Nabaztag Life
    initial: off
    icon: mdi:carrot

  nabaztag_taichi:
    name: Nabaztag Tai Chi
    initial: off
    icon: mdi:meditation

  nabaztag_nose:
    name: Nabaztag Nose
    initial: off
    icon: mdi:nose

  nabaztag_is_awake:
    name: Nabaztag Is Awake
    initial: off
    icon: mdi:sleep-off

#------------------------------------------------------------------------------
input_number:
#------------------------------------------------------------------------------
  nabaztag_left_ear:
    name: Left Ear
    initial: 0
    min: 0
    max: 16
    step: 1
    icon: mdi:ear-hearing

  nabaztag_right_ear:
    name: Right Ear
    initial: 0
    min: 0
    max: 16
    step: 1
    icon: mdi:ear-hearing

  bitcoin_previous_exchange_rate:
    name: Previous Bitcoin Exchange Rate
    initial: 0
    min: 0
    max: 100000
    step: 0.01
    mode: box
    icon: mdi:currency-btc

  bitcoin_value_difference:
    name: Bitcoin Value Difference
    initial: 0
    min: -100000
    max: 100000
    step: 0.01
    mode: box
    icon: mdi:currency-btc

  time_to_work:
    name: Time to work
    initial: 80
    min: 1
    max: 240
    step: 1
    mode: box
    icon: mdi:clock

#------------------------------------------------------------------------------
rest_command:
#------------------------------------------------------------------------------
  nabaztag_update:
    url: "{{ states('input_text.nabaztag_ip_address') }}update"
    method: GET
    timeout: 10

  nabaztag_reboot:
    url: "{{ states('input_text.nabaztag_ip_address') }}reboot"
    method: GET
    timeout: 10

#------------------------------------------------------------------------------
script:
#------------------------------------------------------------------------------
  nabaztag_surprise:
    alias: Nabaztag Surprise
    sequence:
      - action: script.turn_on
        target:
          entity_id: script.nabaztag_random_ear_movement
      - action: script.turn_on
        target:
          entity_id: script.nabaztag_random_nose_color
      - action: script.turn_on
        target:
          entity_id: script.nabaztag_play_sound

  nabaztag_stop:
    alias: Stop Nabaztag
    sequence:
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.nabaztag_taichi
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.nabaztag_nose
      - action: input_select.select_option
        target:
          entity_id: input_select.nabaztag_radio
        data:
          option: "Off"

  nabaztag_info_off:
    alias: Turn Off All Info
    sequence:
      - action: input_select.select_option
        target:
          entity_id: input_select.nabaztag_show_info
        data:
          option: "None"

  nabaztag_update:
    alias: Update Nabaztag
    sequence:
      - action: rest_command.nabaztag_update

  nabaztag_reboot:
    alias: Reboot Nabaztag
    sequence:
      - action: rest_command.nabaztag_reboot

  nabaztag_talk:
    alias: Nabaztag talk
    sequence:
      - alias: Nabaztag Google TTS
        action: tts.google_translate_say
        target:
          entity_id: media_player.nabaztag
        data:
          message: "{{ message }}"
          language: "{{ states('input_text.nabaztag_tts_language') }}"
          cache: true
      - alias: Call bash script with curl command
        action: shell_command.nab_talk
      - alias: Clearing Google TTS
        action: tts.clear_cache

  nabaztag_wakeup:
    alias: Wake Up
    sequence:
      - action: shell_command.nab_wakeup
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.nabaztaglife

  nabaztag_sleep:
    alias: Sleep
    sequence:
      - action: shell_command.nab_sleep
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.nabaztaglife

  nabaztag_taichi:
    alias: Taichi
    sequence:
      - action: shell_command.nab_do_taichi_now
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.nabaztag_taichi

  nabaztag_no_taichi:
    alias: No Taichi
    sequence:
      - action: shell_command.nab_taichi_off
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.nabaztag_taichi

  nabaztag_nose_on:
    alias: Nose On
    sequence:
      - action: shell_command.nab_nose_1
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.nabaztag_nose

  nabaztag_nose_off:
    alias: Nose Off
    sequence:
      - action: shell_command.nab_nose_0
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.nabaztag_nose

  nabaztag_random_ear_movement:
    alias: Random Ear Movement
    sequence:
      - action: input_number.set_value
        target:
          entity_id: input_number.nabaztag_left_ear
        data:
          value: "{{ range(0, 17) | random }}"
      - action: input_number.set_value
        target:
          entity_id: input_number.nabaztag_right_ear
        data:
          value: "{{ range(0, 17) | random }}"

  nabaztag_random_nose_color:
    alias: Random Nose Color
    sequence:
      - action: input_select.select_option
        target:
          entity_id: input_select.nabaztag_nose
        data:
          option: >
            {{ ['Red', 'Green', 'Blue', 'Yellow', 'Purple', 'Orange'] | random }}

  nabaztag_play_sound:
    alias: Play Random Sound
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_sounds
                state: "Beep"
            sequence:
              - action: shell_command.nab_communication
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_sounds
                state: "Chime"
            sequence:
              - action: shell_command.nab_ack
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_sounds
                state: "Bell"
            sequence:
              - action: shell_command.nab_surprise

  nabaztag_daily_info:
    alias: Daily Information Summary
    sequence:
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
      - action: script.nabaztag_talk
        data:
          message: >
            Bonjour ! Voici les informations du jour.
            La météo est {{ states('weather.home') }}.
            Le Bitcoin vaut {{ states('sensor.bitcoin_exchange_rate') }} euros.
            Le trajet vers le travail prendra {{ states('sensor.home_to_work') }} minutes.
            La qualité de l'air est {{ states('sensor.air_quality_status') }}.
            Bonne journée !

#------------------------------------------------------------------------------
switch:
#------------------------------------------------------------------------------
  - platform: template
    switches:
      nabaztaglife:
        friendly_name: "Nabaztag Life"
        value_template: "{{ is_state('input_boolean.nabaztaglife', 'on') }}"
        turn_on:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_wakeup
        turn_off:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_sleep
        icon_template: mdi:carrot

      nabaztag_taichi:
        friendly_name: "Nabaztag Tai Chi"
        value_template: "{{ is_state('input_boolean.nabaztag_taichi', 'on') }}"
        turn_on:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_taichi
        turn_off:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_no_taichi
        icon_template: mdi:meditation

      nabaztag_nose:
        friendly_name: "Nabaztag Nose"
        value_template: "{{ is_state('input_boolean.nabaztag_nose', 'on') }}"
        turn_on:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_nose_on
        turn_off:
          - action: script.turn_on
            target:
              entity_id: script.nabaztag_nose_off
        icon_template: mdi:nose

#------------------------------------------------------------------------------
media_player:
#------------------------------------------------------------------------------
  - trigger: universal
    name: nabaztag

#------------------------------------------------------------------------------
input_select:
#------------------------------------------------------------------------------
  nabaztag_taichi:
    name: Nabaztag Tai Chi Mode
    options:
      - "Off"
      - "Slow"
      - "Fast"
    initial: "Off"
    icon: mdi:meditation

  nabaztag_nose:
    name: Nabaztag Nose Color
    options:
      - "Off"
      - "Red"
      - "Green"
      - "Blue"
      - "Yellow"
      - "Purple"
      - "Orange"
    initial: "Off"
    icon: mdi:palette

  nabaztag_body_language:
    name: Nabaztag Body Language
    options:
      - "Normal"
      - "Happy"
      - "Sad"
      - "Excited"
      - "Sleeping"
    initial: "Normal"
    icon: mdi:robot

  nabaztag_show_info:
    name: Show Info Type
    options:
      - "None"
      - "Weather"
      - "Stocks"
      - "Traffic"
      - "Pollution"
      - "All"
    initial: "None"
    icon: mdi:information

  nabaztag_weather:
    name: Weather Display
    options:
      - "Off"
      - "Current"
      - "Forecast"
      - "Both"
    initial: "Off"
    icon: mdi:weather-cloudy

  nabaztag_stocks:
    name: Stocks Display
    options:
      - "Off"
      - "Bitcoin"
      - "All"
    initial: "Off"
    icon: mdi:chart-line

  nabaztag_traffic:
    name: Traffic Display
    options:
      - "Off"
      - "Current"
      - "Alert Only"
    initial: "Off"
    icon: mdi:car

  nabaztag_pollution:
    name: Pollution Display
    options:
      - "Off"
      - "Current"
      - "Alert Only"
    initial: "Off"
    icon: mdi:air-filter

  nabaztag_sounds:
    name: Nabaztag Sounds
    options:
      - "Silent"
      - "Beep"
      - "Chime"
      - "Bell"
    initial: "Silent"
    icon: mdi:volume-high

  nabaztag_radio:
    name: Radio Station
    options:
      - "Off"
      - "Radio 1"
      - "Radio 2"
      - "Radio 3"
      - "Radio 4"
      - "Radio 5"
    initial: "Off"
    icon: mdi:radio

  nabaztag_language:
    name: Language
    options:
      - "fr"
      - "en"
      - "de"
      - "es"
      - "it"
    initial: "fr"
    icon: mdi:translate

  nabaztag_time_zone:
    name: Time Zone
    options:
      - "Europe/Paris"
      - "Europe/London"
      - "Europe/Berlin"
      - "Europe/Rome"
      - "America/New_York"
    initial: "Europe/Paris"
    icon: mdi:clock-outline

#------------------------------------------------------------------------------
shell_command:
#------------------------------------------------------------------------------
  nab_stop: curl "{{ states('input_text.nabaztag_ip_address') }}stop"
  nab_clear: curl "{{ states('input_text.nabaztag_ip_address') }}clear"
  nab_sleep: curl "{{ states('input_text.nabaztag_ip_address') }}sleep"
  nab_wakeup: curl "{{ states('input_text.nabaztag_ip_address') }}wakeup"
  nab_gettime: curl "{{ states('input_text.nabaztag_ip_address') }}gettime"
  nab_reboot: curl "{{ states('input_text.nabaztag_ip_address') }}reboot"
  nab_communication: curl "{{ states('input_text.nabaztag_ip_address') }}communication"
  nab_ack: curl "{{ states('input_text.nabaztag_ip_address') }}ack"
  nab_abort: curl "{{ states('input_text.nabaztag_ip_address') }}abort"
  nab_ministop: curl "{{ states('input_text.nabaztag_ip_address') }}ministop"
  nab_do_taichi_now: curl "{{ states('input_text.nabaztag_ip_address') }}taichi?v=1000"
  nab_taichi_off: curl "{{ states('input_text.nabaztag_ip_address') }}taichi?v=0"
  nab_taichi_medium: curl "{{ states('input_text.nabaztag_ip_address') }}taichi?v=80"
  nab_talk: bash /config/www/vl/talk.sh
  nab_radio_1: curl "{{ states('input_text.nabaztag_ip_address') }}play?u={{ states('input_text.nabaztag_radio_1_ip_address') }}"
  nab_radio_2: curl "{{ states('input_text.nabaztag_ip_address') }}play?u={{ states('input_text.nabaztag_radio_2_ip_address') }}"
  nab_radio_3: curl "{{ states('input_text.nabaztag_ip_address') }}play?u={{ states('input_text.nabaztag_radio_3_ip_address') }}"
  nab_radio_4: curl "{{ states('input_text.nabaztag_ip_address') }}play?u={{ states('input_text.nabaztag_radio_4_ip_address') }}"
  nab_radio_5: curl "{{ states('input_text.nabaztag_ip_address') }}play?u={{ states('input_text.nabaztag_radio_5_ip_address') }}"
  nab_nose_1: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/leds.cgi?led=nose&color=FF0000"
  nab_nose_0: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/leds.cgi?led=nose&color=000000"
  nab_taichi_min: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/choregraphy.cgi?chor=taichi_min"
  nab_taichi_max: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/choregraphy.cgi?chor=taichi_max"
  nab_surprise: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/choregraphy.cgi?chor=surprise"
  nab_nose_red: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/leds.cgi?led=nose&color=FF0000"
  nab_nose_green: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/leds.cgi?led=nose&color=00FF00"
  nab_nose_blue: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/leds.cgi?led=nose&color=0000FF"
  nab_nose_yellow: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/leds.cgi?led=nose&color=FFFF00"
  nab_nose_purple: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/leds.cgi?led=nose&color=FF00FF"
  nab_nose_orange: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/leds.cgi?led=nose&color=FF8000"
  nab_nose_off: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/leds.cgi?led=nose&color=000000"
  nab_ear_left: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/ears.cgi?left={{ position }}"
  nab_ear_right: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/ears.cgi?right={{ position }}"
  nab_lang_en: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/config.cgi?lang=en"
  nab_lang_fr: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/config.cgi?lang=fr"
  nab_lang_de: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/config.cgi?lang=de"
  nab_lang_es: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/config.cgi?lang=es"
  nab_lang_it: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/config.cgi?lang=it"
  nab_time_zone_paris: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/config.cgi?timezone=Europe/Paris"
  nab_time_zone_london: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/config.cgi?timezone=Europe/London"
  nab_time_zone_berlin: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/config.cgi?timezone=Europe/Berlin"
  nab_time_zone_rome: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/config.cgi?timezone=Europe/Rome"
  nab_time_zone_newyork: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/config.cgi?timezone=America/New_York"
  nab_weather_current: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/weather.cgi?current=1"
  nab_weather_forecast: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/weather.cgi?forecast=1"
  nab_weather_off: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/weather.cgi?off=1"
  nab_weather_0: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/weather_display.cgi?icon=sunny"
  nab_weather_1: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/weather_display.cgi?icon=cloudy"
  nab_weather_2: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/weather_display.cgi?icon=fog"
  nab_weather_3: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/weather_display.cgi?icon=rainy"
  nab_weather_4: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/weather_display.cgi?icon=snowy"
  nab_weather_5: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/weather_display.cgi?icon=stormy"
  nab_stock_0: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/stock_display.cgi?trend=very_negative"
  nab_stock_1: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/stock_display.cgi?trend=negative"
  nab_stock_2: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/stock_display.cgi?trend=slightly_negative"
  nab_stock_3: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/stock_display.cgi?trend=stable"
  nab_stock_4: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/stock_display.cgi?trend=slightly_positive"
  nab_stock_5: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/stock_display.cgi?trend=positive"
  nab_stock_6: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/stock_display.cgi?trend=very_positive"
  nab_stock_bitcoin: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/stock_display.cgi?type=bitcoin&value={{ states('sensor.bitcoin_exchange_rate') }}"
  nab_stock_all: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/stock_display.cgi?type=all"
  nab_stock_off: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/stock_display.cgi?off=1"
  nab_traffic_0: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/traffic_display.cgi?level=free&time={{ states('sensor.home_to_work') }}"
  nab_traffic_1: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/traffic_display.cgi?level=okay&time={{ states('sensor.home_to_work') }}"
  nab_traffic_2: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/traffic_display.cgi?level=moderate&time={{ states('sensor.home_to_work') }}"
  nab_traffic_3: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/traffic_display.cgi?level=normal&time={{ states('sensor.home_to_work') }}"
  nab_traffic_4: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/traffic_display.cgi?level=heavy&time={{ states('sensor.home_to_work') }}"
  nab_traffic_5: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/traffic_display.cgi?level=congested&time={{ states('sensor.home_to_work') }}"
  nab_traffic_6: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/traffic_display.cgi?level=extreme&time={{ states('sensor.home_to_work') }}"
  nab_traffic_current: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/traffic_display.cgi?current=1&time={{ states('sensor.home_to_work') }}"
  nab_traffic_alert: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/traffic_display.cgi?alert_only=1"
  nab_traffic_off: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/traffic_display.cgi?off=1"
  nab_pollution_0: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/pollution_display.cgi?level=good&aqi={{ states('sensor.air_quality_index') }}"
  nab_pollution_1: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/pollution_display.cgi?level=fair&aqi={{ states('sensor.air_quality_index') }}"
  nab_pollution_2: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/pollution_display.cgi?level=moderate&aqi={{ states('sensor.air_quality_index') }}"
  nab_pollution_3: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/pollution_display.cgi?level=poor&aqi={{ states('sensor.air_quality_index') }}"
  nab_pollution_4: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/pollution_display.cgi?level=very_poor&aqi={{ states('sensor.air_quality_index') }}"
  nab_pollution_current: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/pollution_display.cgi?current=1&aqi={{ states('sensor.air_quality_index') }}"
  nab_pollution_alert: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/pollution_display.cgi?alert_only=1"
  nab_pollution_off: curl -s "{{ states('input_text.nabaztag_ip_address') }}cgi-bin/pollution_display.cgi?off=1"

#------------------------------------------------------------------------------
automation:
#------------------------------------------------------------------------------
  # Réveil automatique du Nabaztag
  - alias: "Nabaztag Wake Up Morning"
    id: nabaztag_wake_up_morning
    trigger:
      - trigger: time
        at: "07:00:00"
    condition:
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "off"
    action:
      - action: script.turn_on
        target:
          entity_id: script.nabaztag_wakeup

  # Endormissement automatique du Nabaztag
  - alias: "Nabaztag Sleep Night"
    id: nabaztag_sleep_night
    trigger:
      - trigger: time
        at: "22:00:00"
    condition:
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
    action:
      - action: script.turn_on
        target:
          entity_id: script.nabaztag_sleep

  # Météo du matin
  - alias: "Nabaztag Morning Weather"
    id: nabaztag_morning_weather
    trigger:
      - trigger: time
        at: "08:00:00"
    condition:
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
      - condition: not
        conditions:
          - condition: state
            entity_id: input_select.nabaztag_weather
            state: "Off"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: weather.home
                state: "sunny"
            sequence:
              - action: shell_command.nab_weather_0
          - conditions:
              - condition: state
                entity_id: weather.home
                state: "cloudy"
            sequence:
              - action: shell_command.nab_weather_1
          - conditions:
              - condition: state
                entity_id: weather.home
                state: "fog"
            sequence:
              - action: shell_command.nab_weather_2
          - conditions:
              - condition: state
                entity_id: weather.home
                state: "rainy"
            sequence:
              - action: shell_command.nab_weather_3
          - conditions:
              - condition: state
                entity_id: weather.home
                state: "snowy"
            sequence:
              - action: shell_command.nab_weather_4
          - conditions:
              - condition: state
                entity_id: weather.home
                state: "lightning-rainy"
            sequence:
              - action: shell_command.nab_weather_5

  # Informations trafic avant le travail
  - alias: "Nabaztag Morning Traffic"
    id: nabaztag_morning_traffic
    trigger:
      - trigger: time
        at: "07:30:00"
    condition:
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
      - condition: not
        conditions:
          - condition: state
            entity_id: input_select.nabaztag_traffic
            state: "Off"
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: sensor.traffic_status
                state: "good"
            sequence:
              - action: shell_command.nab_traffic_0
          - conditions:
              - condition: state
                entity_id: sensor.traffic_status
                state: "moderate"
            sequence:
              - action: shell_command.nab_traffic_2
          - conditions:
              - condition: state
                entity_id: sensor.traffic_status
                state: "heavy"
            sequence:
              - action: shell_command.nab_traffic_4

  # Cours du Bitcoin (mise à jour toutes les heures pendant la journée)
  - alias: "Nabaztag Bitcoin Update"
    id: nabaztag_bitcoin_update
    trigger:
      - trigger: time_pattern
        minutes: 0
    condition:
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
      - condition: not
        conditions:
          - condition: state
            entity_id: input_select.nabaztag_stocks
            state: "Off"
      - condition: time
        after: "09:00:00"
        before: "18:00:00"
      - condition: template
        value_template: >
          {% set current = states('sensor.bitcoin_exchange_rate') | float %}
          {% set previous = states('input_number.bitcoin_previous_exchange_rate') | float %}
          {{ (current - previous) | abs > (previous * 0.05) }}
    action:
      - action: input_number.set_value
        target:
          entity_id: input_number.bitcoin_previous_exchange_rate
        data:
          value: "{{ states('sensor.bitcoin_exchange_rate') }}"
      - action: shell_command.nab_stock_bitcoin

  # Qualité de l'air (alerte si mauvaise)
  - alias: "Nabaztag Air Quality Alert"
    id: nabaztag_air_quality_alert
    trigger:
      - trigger: state
        entity_id: sensor.air_quality_index
    condition:
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
      - condition: not
        conditions:
          - condition: state
            entity_id: input_select.nabaztag_pollution
            state: "Off"
      - condition: numeric_state
        entity_id: sensor.air_quality_index
        above: 3
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.air_quality_index
                below: 5
            sequence:
              - action: shell_command.nab_pollution_3
          - conditions:
              - condition: numeric_state
                entity_id: sensor.air_quality_index
                above: 4
            sequence:
              - action: shell_command.nab_pollution_4

  # Gestion des changements d'état des input_select
  - alias: "Nabaztag Handle Radio Selection"
    id: nabaztag_handle_radio_selection
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_radio
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_radio
                state: "Radio 1"
            sequence:
              - action: shell_command.nab_radio_1
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_radio
                state: "Radio 2"
            sequence:
              - action: shell_command.nab_radio_2
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_radio
                state: "Radio 3"
            sequence:
              - action: shell_command.nab_radio_3
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_radio
                state: "Radio 4"
            sequence:
              - action: shell_command.nab_radio_4
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_radio
                state: "Radio 5"
            sequence:
              - action: shell_command.nab_radio_5
        default:
          - action: shell_command.nab_stop

  # Gestion des couleurs du nez
  - alias: "Nabaztag Handle Nose Color"
    id: nabaztag_handle_nose_color
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_nose
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Red"
            sequence:
              - action: shell_command.nab_nose_red
              - action: input_boolean.turn_on
                target:
                  entity_id: input_boolean.nabaztag_nose
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Green"
            sequence:
              - action: shell_command.nab_nose_green
              - action: input_boolean.turn_on
                target:
                  entity_id: input_boolean.nabaztag_nose
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Blue"
            sequence:
              - action: shell_command.nab_nose_blue
              - action: input_boolean.turn_on
                target:
                  entity_id: input_boolean.nabaztag_nose
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Yellow"
            sequence:
              - action: shell_command.nab_nose_yellow
              - action: input_boolean.turn_on
                target:
                  entity_id: input_boolean.nabaztag_nose
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Purple"
            sequence:
              - action: shell_command.nab_nose_purple
              - action: input_boolean.turn_on
                target:
                  entity_id: input_boolean.nabaztag_nose
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_nose
                state: "Orange"
            sequence:
              - action: shell_command.nab_nose_orange
              - action: input_boolean.turn_on
                target:
                  entity_id: input_boolean.nabaztag_nose
        default:
          - action: shell_command.nab_nose_off
          - action: input_boolean.turn_off
            target:
              entity_id: input_boolean.nabaztag_nose

  # Gestion des mouvements Tai Chi
  - alias: "Nabaztag Handle Tai Chi Mode"
    id: nabaztag_handle_taichi_mode
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_taichi
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_taichi
                state: "Slow"
            sequence:
              - action: shell_command.nab_taichi_min
              - action: input_boolean.turn_on
                target:
                  entity_id: input_boolean.nabaztag_taichi
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_taichi
                state: "Fast"
            sequence:
              - action: shell_command.nab_taichi_max
              - action: input_boolean.turn_on
                target:
                  entity_id: input_boolean.nabaztag_taichi
        default:
          - action: shell_command.nab_taichi_off
          - action: input_boolean.turn_off
            target:
              entity_id: input_boolean.nabaztag_taichi

  # Gestion des mouvements d'oreilles
  - alias: "Nabaztag Handle Left Ear Movement"
    id: nabaztag_handle_left_ear
    trigger:
      - trigger: state
        entity_id: input_number.nabaztag_left_ear
    action:
      - action: shell_command.nab_ear_left
        data:
          position: "{{ states('input_number.nabaztag_left_ear') }}"

  - alias: "Nabaztag Handle Right Ear Movement"
    id: nabaztag_handle_right_ear
    trigger:
      - trigger: state
        entity_id: input_number.nabaztag_right_ear
    action:
      - action: shell_command.nab_ear_right
        data:
          position: "{{ states('input_number.nabaztag_right_ear') }}"

  # Gestion des langues
  - alias: "Nabaztag Handle Language Change"
    id: nabaztag_handle_language
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_language
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_language
                state: "en"
            sequence:
              - action: shell_command.nab_lang_en
              - action: input_text.set_value
                target:
                  entity_id: input_text.nabaztag_tts_language
                data:
                  value: "en"
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_language
                state: "de"
            sequence:
              - action: shell_command.nab_lang_de
              - action: input_text.set_value
                target:
                  entity_id: input_text.nabaztag_tts_language
                data:
                  value: "de"
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_language
                state: "es"
            sequence:
              - action: shell_command.nab_lang_es
              - action: input_text.set_value
                target:
                  entity_id: input_text.nabaztag_tts_language
                data:
                  value: "es"
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_language
                state: "it"
            sequence:
              - action: shell_command.nab_lang_it
              - action: input_text.set_value
                target:
                  entity_id: input_text.nabaztag_tts_language
                data:
                  value: "it"
        default:
          - action: shell_command.nab_lang_fr
          - action: input_text.set_value
            target:
              entity_id: input_text.nabaztag_tts_language
            data:
              value: "fr"

  # Gestion des fuseaux horaires
  - alias: "Nabaztag Handle Timezone Change"
    id: nabaztag_handle_timezone
    trigger:
      - trigger: state
        entity_id: input_select.nabaztag_time_zone
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_time_zone
                state: "Europe/London"
            sequence:
              - action: shell_command.nab_time_zone_london
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_time_zone
                state: "Europe/Berlin"
            sequence:
              - action: shell_command.nab_time_zone_berlin
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_time_zone
                state: "Europe/Rome"
            sequence:
              - action: shell_command.nab_time_zone_rome
          - conditions:
              - condition: state
                entity_id: input_select.nabaztag_time_zone
                state: "America/New_York"
            sequence:
              - action: shell_command.nab_time_zone_newyork
        default:
          - action: shell_command.nab_time_zone_paris

  # Envoi de messages TTS
  - alias: "Nabaztag Handle TTS Message"
    id: nabaztag_handle_tts
    trigger:
      - trigger: state
        entity_id: input_text.nabaztag_voice
    condition:
      - condition: template
        value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
      - condition: template
        value_template: "{{ states('input_text.nabaztag_voice') | length > 0 }}"
      - condition: state
        entity_id: input_boolean.nabaztaglife
        state: "on"
    action:
      - action: script.nabaztag_talk
        data:
          message: "{{ states('input_text.nabaztag_voice') }}"
      - delay:
          seconds: 2
      - action: input_text.set_value
        target:
          entity_id: input_text.nabaztag_voice
        data:
          value: "Say Something..."

#------------------------------------------------------------------------------
# TEMPLATE POUR SURVEILLER L'ÉTAT DU NABAZTAG
#------------------------------------------------------------------------------
template:
  - trigger:
      - trigger: state
        entity_id:
          - input_boolean.nabaztaglife
          - input_boolean.nabaztag_taichi
          - input_boolean.nabaztag_nose
          - input_select.nabaztag_radio
    sensor:
      - name: "Nabaztag Status"
        state: >
          {% if is_state('input_boolean.nabaztaglife', 'on') %}
            {% set status = ['Actif'] %}
            {% if is_state('input_boolean.nabaztag_taichi', 'on') %}
              {% set status = status + ['Tai Chi'] %}
            {% endif %}
            {% if is_state('input_boolean.nabaztag_nose', 'on') %}
              {% set status = status + ['Nez allumé'] %}
            {% endif %}
            {% if not is_state('input_select.nabaztag_radio', 'Off') %}
              {% set status = status + ['Radio: ' + states('input_select.nabaztag_radio')] %}
            {% endif %}
            {{ status | join(', ') }}
          {% else %}
            Endormi
          {% endif %}
        icon: >
          {% if is_state('input_boolean.nabaztaglife', 'on') %}
            mdi:carrot
          {% else %}
            mdi:sleep
          {% endif %}
