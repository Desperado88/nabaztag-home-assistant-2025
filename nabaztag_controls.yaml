# Configuration pour Home Assistant - Nabaztag Control
# √Ä ajouter dans configuration.yaml

# Variables d'entr√©e pour l'adresse IP
input_text:
  nabaztag_ip_address:
    name: "Adresse IP Nabaztag"
    initial: "192.168.0.13"

  nabaztag_message:
    name: "Message √† dire"
    initial: "Bonjour, je m'appelle Nabaztag"
    max: 255

# S√©lecteurs pour les positions et √©tats
input_select:
  nabaztag_ear_position:
    name: "Position des oreilles"
    options:
      - "0"
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
      - "6"
      - "7"
      - "8"
      - "9"
      - "10"
    initial: "5"

  nabaztag_nose_state:
    name: "√âtat du nez"
    options:
      - "off"
      - "on"
      - "todo"
      - "urgent"
      - "panic"
    initial: "off"

  nabaztag_weather:
    name: "M√©t√©o"
    options:
      - "soleil"
      - "nuages"
      - "brouillard"
      - "pluie"
      - "neige"
      - "storm"
    initial: "soleil"
      
# Scripts pour contr√¥ler le Nabaztag
script:
  nabaztag_move_left_ear:
    alias: "Nabaztag - Oreille gauche"
    sequence:
      - action: rest_command.nabaztag_left_ear
        data:
          position: "{{ states('input_select.nabaztag_ear_position') }}"

  nabaztag_move_right_ear:
    alias: "Nabaztag - Oreille droite"
    sequence:
      - action: rest_command.nabaztag_right_ear
        data:
          position: "{{ states('input_select.nabaztag_ear_position') }}"

  nabaztag_move_both_ears:
    alias: "Nabaztag - Les deux oreilles"
    sequence:
      - action: rest_command.nabaztag_left_ear
        data:
          position: "{{ states('input_select.nabaztag_ear_position') }}"
      - delay: "00:00:01"
      - action: rest_command.nabaztag_right_ear
        data:
          position: "{{ states('input_select.nabaztag_ear_position') }}"

  nabaztag_set_nose:
    alias: "Nabaztag - √âtat du nez"
    sequence:
      - action: rest_command.nabaztag_nose
        data:
          state: >
            {% set nose_state = states('input_select.nabaztag_nose_state') %}
            {% if nose_state == 'off' %}0
            {% elif nose_state == 'on' %}1
            {% elif nose_state == 'todo' %}2
            {% elif nose_state == 'urgent' %}3
            {% elif nose_state == 'panic' %}4
            {% endif %}

  nabaztag_set_weather:
    alias: "Nabaztag - M√©t√©o"
    sequence:
      - action: rest_command.nabaztag_weather
        data:
          weather: >
            {% set weather_state = states('input_select.nabaztag_weather') %}
            {% if weather_state == 'soleil' %}0
            {% elif weather_state == 'nuages' %}1
            {% elif weather_state == 'brouillard' %}2
            {% elif weather_state == 'pluie' %}3
            {% elif weather_state == 'neige' %}4
            {% elif weather_state == 'tempete' %}5
            {% endif %}

  nabaztag_dance:
    alias: "Nabaztag - Danse des oreilles"
    sequence:
      - repeat:
          count: 3
          sequence:
            - action: rest_command.nabaztag_left_ear
              data:
                position: "0"
            - action: rest_command.nabaztag_right_ear
              data:
                position: "10"
            - delay: "00:00:01"
            - action: rest_command.nabaztag_left_ear
              data:
                position: "10"
            - action: rest_command.nabaztag_right_ear
              data:
                position: "0"
            - delay: "00:00:01"
      - action: rest_command.nabaztag_left_ear
        data:
          position: "5"
      - action: rest_command.nabaztag_right_ear
        data:
          position: "5"

  nabaztag_talk:
    alias: "Nabaztag - Parler"
    sequence:
      - action: rest_command.nabaztag_say

rest_command:
  nabaztag_say:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/say?text={{ states('input_text.nabaztag_message') | urlencode }}"
    method: get
    timeout: 30
  nabaztag_left_ear:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/left?p={{ position }}&d=0"
    method: get
    timeout: 10
  nabaztag_right_ear:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/right?p={{ position }}&d=0"
    method: get
    timeout: 10
  nabaztag_nose:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/nose?v={{ state }}"
    method: get
    timeout: 10
  nabaztag_weather:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/weather?v={{ weather }}"
    method: get
    timeout: 10
  nabaztag_play_sound:
    url: "http://{{ states('input_text.nabaztag_ip_address') }}/sound?id=1"
    method: get
    timeout: 10

# Automatisations d'exemple
automation:
  - alias: "Nabaztag - R√©veil matin"
    trigger:
      - trigger: time
        at: "07:00:00"
    action:
      - action: script.nabaztag_dance
      - action: script.nabaztag_set_nose
        data:
          state: "1"

  - alias: "Nabaztag - M√©t√©o automatique"
    trigger:
      - trigger: time
        at: "08:00:00"
    action:
      - action: script.nabaztag_set_weather
        data:
          weather: >
            {% set weather_condition = states('weather.home') %}
            {% if 'sun' in weather_condition %}0
            {% elif 'cloud' in weather_condition %}1
            {% elif 'fog' in weather_condition %}2
            {% elif 'rain' in weather_condition %}3
            {% elif 'snow' in weather_condition %}4
            {% elif 'storm' in weather_condition %}5
            {% else %}0{% endif %}

  - alias: "Nabaztag - Notification urgente"
    trigger:
      - trigger: state
        entity_id: binary_sensor.door_contact
        to: 'on'
    action:
      - action: script.nabaztag_set_nose
        data:
          state: "3"  # urgent
      - repeat:
          count: 5
          sequence:
            - action: rest_command.nabaztag_left_ear
              data:
                position: "0"
            - action: rest_command.nabaztag_right_ear
              data:
                position: "10"
            - delay: "00:00:01"
            - action: rest_command.nabaztag_left_ear
              data:
                position: "10"
            - action: rest_command.nabaztag_right_ear
              data:
                position: "0"
            - delay: "00:00:01"
            
___________________________ FIN du YAML !!!!! ________________________________
# Interface utilisateur - √Ä ajouter via l'√©diteur d'interface
type: vertical-stack
cards:
  - type: entities
    title: üé≠ Nabaztag - Contr√¥le
    entities:
      - entity: input_text.nabaztag_ip_address
        name: Adresse IP du Nabaztag
      - entity: input_select.nabaztag_ear_position
        name: Position des oreilles
      - entity: input_select.nabaztag_nose_state
        name: √âtat du nez
      - entity: input_select.nabaztag_weather
        name: M√©t√©o
  - type: horizontal-stack
    cards:
      - type: button
        name: Oreille gauche
        icon: mdi:arrow-left-bold
        tap_action:
          action: call-service
          service: script.nabaztag_move_left_ear
      - type: button
        name: Oreille droite
        icon: mdi:arrow-right-bold
        tap_action:
          action: call-service
          service: script.nabaztag_move_right_ear
      - type: button
        name: Les deux
        icon: mdi:sync
        tap_action:
          action: call-service
          service: script.nabaztag_move_both_ears
  - type: horizontal-stack
    cards:
      - type: button
        name: Danse
        icon: mdi:music-note
        tap_action:
          action: call-service
          service: script.nabaztag_dance
      - type: button
        name: Nez
        icon: mdi:led-on
        tap_action:
          action: call-service
          service: script.nabaztag_set_nose
      - type: button
        name: M√©t√©o
        icon: mdi:weather-partly-cloudy
        tap_action:
          action: call-service
          service: script.nabaztag_set_weather
  - type: entities
    title: üó£Ô∏è Nabaztag - Parole
    entities:
      - entity: input_text.nabaztag_message
        name: Message √† dire
  - type: button
    name: Faire parler
    icon: mdi:chat
    tap_action:
      action: call-service
      service: script.nabaztag_talk
